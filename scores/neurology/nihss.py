"""
NIHSS - NIH Stroke Scale
ƒê√°nh gi√° m·ª©c ƒë·ªô n·∫∑ng c·ªßa ƒë·ªôt qu·ªµ
"""

import streamlit as st


def render():
    """NIHSS Calculator"""
    st.subheader("üß† NIHSS - NIH Stroke Scale")
    st.caption("Thang ƒêi·ªÉm ƒê√°nh Gi√° M·ª©c ƒê·ªô N·∫∑ng ƒê·ªôt Qu·ªµ")
    
    st.info("""
    **NIHSS** l√† thang ƒëi·ªÉm chu·∫©n v√†ng ƒë√°nh gi√° m·ª©c ƒë·ªô n·∫∑ng c·ªßa ƒë·ªôt qu·ªµ n√£o.
    
    - ƒê∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ quy·∫øt ƒë·ªãnh ƒëi·ªÅu tr·ªã (thrombolysis, thrombectomy)
    - Theo d√µi di·ªÖn bi·∫øn l√¢m s√†ng
    - Ti√™n l∆∞·ª£ng k·∫øt c·ª•c
    """)
    
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.markdown("### üìã ƒê√°nh Gi√° 11 H·∫°ng M·ª•c")
        
        # 1a. Level of Consciousness
        st.markdown("#### 1a. M·ª©c ƒê·ªô √ù Th·ª©c")
        loc = st.radio(
            "ƒê√°nh gi√°:",
            [
                "0 - T·ªânh t√°o, ph·∫£n ·ª©ng t·ªët",
                "1 - Kh√¥ng ho√†n to√†n t·ªânh t√°o, nh∆∞ng k√≠ch th√≠ch nh·∫π l√† t·ªânh",
                "2 - Ph·∫£i k√≠ch th√≠ch l·∫∑p l·∫°i ho·∫∑c k√≠ch th√≠ch ƒëau m·ªõi t·ªânh",
                "3 - H√¥n m√™, kh√¥ng ph·∫£n ·ª©ng ho·∫∑c ch·ªâ ph·∫£n x·∫°"
            ],
            key="loc"
        )
        loc_score = int(loc[0])
        
        # 1b. LOC Questions
        st.markdown("#### 1b. C√¢u H·ªèi ƒê·ªãnh H∆∞·ªõng")
        st.caption("H·ªèi: Th√°ng n√†y l√† th√°ng m·∫•y? Bao nhi√™u tu·ªïi?")
        loc_questions = st.radio(
            "Tr·∫£ l·ªùi ƒë√∫ng:",
            [
                "0 - C·∫£ 2 c√¢u ƒë√∫ng",
                "1 - 1 c√¢u ƒë√∫ng",
                "2 - C·∫£ 2 c√¢u sai ho·∫∑c kh√¥ng tr·∫£ l·ªùi ƒë∆∞·ª£c"
            ],
            key="loc_q"
        )
        loc_q_score = int(loc_questions[0])
        
        # 1c. LOC Commands
        st.markdown("#### 1c. L√†m Theo L·ªánh")
        st.caption("Y√™u c·∫ßu: M·ªü/nh·∫Øm m·∫Øt, n·∫Øm/m·ªü b√†n tay")
        loc_commands = st.radio(
            "Th·ª±c hi·ªán ƒë√∫ng:",
            [
                "0 - C·∫£ 2 ƒë·ªông t√°c ƒë√∫ng",
                "1 - 1 ƒë·ªông t√°c ƒë√∫ng",
                "2 - C·∫£ 2 ƒë·ªông t√°c sai"
            ],
            key="loc_c"
        )
        loc_c_score = int(loc_commands[0])
        
        st.markdown("---")
        
        # 2. Best Gaze
        st.markdown("#### 2. V·∫≠n Nh√£n (Eye Movement)")
        gaze = st.radio(
            "Nh√¨n theo ng√≥n tay ngang:",
            [
                "0 - B√¨nh th∆∞·ªùng",
                "1 - Li·ªát m·ªôt ph·∫ßn (b·∫•t th∆∞·ªùng 1 ho·∫∑c c·∫£ 2 m·∫Øt)",
                "2 - L·ªách c∆∞·ª°ng b·ª©c (kh√¥ng ch·ªß ƒë·ªông ƒë∆∞·ª£c)"
            ],
            key="gaze"
        )
        gaze_score = int(gaze[0])
        
        # 3. Visual Fields
        st.markdown("#### 3. Th·ªã Tr∆∞·ªùng")
        visual = st.radio(
            "Ki·ªÉm tra b·∫±ng c√°ch ƒë·∫øm ng√≥n tay 4 g√≥c:",
            [
                "0 - Kh√¥ng m·∫•t th·ªã tr∆∞·ªùng",
                "1 - M·∫•t th·ªã tr∆∞·ªùng t·ª´ng ph·∫ßn (quadrantanopia)",
                "2 - M·∫•t ho√†n to√†n n·ª≠a th·ªã tr∆∞·ªùng (hemianopia)",
                "3 - M√π 2 b√™n (bilateral hemianopia ho·∫∑c m√π)"
            ],
            key="visual"
        )
        visual_score = int(visual[0])
        
        # 4. Facial Palsy
        st.markdown("#### 4. Li·ªát M·∫∑t")
        st.caption("Y√™u c·∫ßu: C∆∞·ªùi, nhƒÉn m·∫∑t")
        facial = st.radio(
            "ƒê√°nh gi√°:",
            [
                "0 - B√¨nh th∆∞·ªùng, ƒë·ªëi x·ª©ng",
                "1 - Li·ªát nh·∫π (n·∫øp m≈©i m√° m·∫•t, mi·ªáng m√©o nh·∫π)",
                "2 - Li·ªát r√µ (li·ªát ho√†n to√†n ph·∫ßn d∆∞·ªõi m·∫∑t)",
                "3 - Li·ªát ho√†n to√†n m·ªôt ho·∫∑c c·∫£ 2 b√™n m·∫∑t"
            ],
            key="facial"
        )
        facial_score = int(facial[0])
        
        st.markdown("---")
        
        # 5. Motor Arm (Left)
        st.markdown("#### 5a. V·∫≠n ƒê·ªông Tay TR√ÅI")
        st.caption("Gi∆° tay l√™n 90¬∞ (ng·ªìi) ho·∫∑c 45¬∞ (n·∫±m), gi·ªØ 10 gi√¢y")
        arm_left = st.radio(
            "Tay tr√°i:",
            [
                "0 - Gi·ªØ ƒë∆∞·ª£c 10 gi√¢y, kh√¥ng sa",
                "1 - Sa xu·ªëng tr∆∞·ªõc 10 gi√¢y, nh∆∞ng kh√¥ng ch·∫°m gi∆∞·ªùng",
                "2 - C√≥ c·ªë g·∫Øng ch·ªëng tr·ªçng l·ª±c, nh∆∞ng sa xu·ªëng gi∆∞·ªùng",
                "3 - Kh√¥ng ch·ªëng ƒë∆∞·ª£c tr·ªçng l·ª±c, r∆°i ngay",
                "4 - Kh√¥ng c·ª≠ ƒë·ªông"
            ],
            key="arm_l"
        )
        arm_l_score = int(arm_left[0])
        
        # 5. Motor Arm (Right)
        st.markdown("#### 5b. V·∫≠n ƒê·ªông Tay PH·∫¢I")
        arm_right = st.radio(
            "Tay ph·∫£i:",
            [
                "0 - Gi·ªØ ƒë∆∞·ª£c 10 gi√¢y, kh√¥ng sa",
                "1 - Sa xu·ªëng tr∆∞·ªõc 10 gi√¢y, nh∆∞ng kh√¥ng ch·∫°m gi∆∞·ªùng",
                "2 - C√≥ c·ªë g·∫Øng ch·ªëng tr·ªçng l·ª±c, nh∆∞ng sa xu·ªëng gi∆∞·ªùng",
                "3 - Kh√¥ng ch·ªëng ƒë∆∞·ª£c tr·ªçng l·ª±c, r∆°i ngay",
                "4 - Kh√¥ng c·ª≠ ƒë·ªông"
            ],
            key="arm_r"
        )
        arm_r_score = int(arm_right[0])
        
        # 6. Motor Leg (Left)
        st.markdown("#### 6a. V·∫≠n ƒê·ªông Ch√¢n TR√ÅI")
        st.caption("N√¢ng ch√¢n l√™n 30¬∞, gi·ªØ 5 gi√¢y")
        leg_left = st.radio(
            "Ch√¢n tr√°i:",
            [
                "0 - Gi·ªØ ƒë∆∞·ª£c 5 gi√¢y, kh√¥ng sa",
                "1 - Sa xu·ªëng tr∆∞·ªõc 5 gi√¢y, nh∆∞ng kh√¥ng ch·∫°m gi∆∞·ªùng",
                "2 - C√≥ c·ªë g·∫Øng ch·ªëng tr·ªçng l·ª±c, nh∆∞ng sa xu·ªëng gi∆∞·ªùng",
                "3 - Kh√¥ng ch·ªëng ƒë∆∞·ª£c tr·ªçng l·ª±c, r∆°i ngay",
                "4 - Kh√¥ng c·ª≠ ƒë·ªông"
            ],
            key="leg_l"
        )
        leg_l_score = int(leg_left[0])
        
        # 6. Motor Leg (Right)
        st.markdown("#### 6b. V·∫≠n ƒê·ªông Ch√¢n PH·∫¢I")
        leg_right = st.radio(
            "Ch√¢n ph·∫£i:",
            [
                "0 - Gi·ªØ ƒë∆∞·ª£c 5 gi√¢y, kh√¥ng sa",
                "1 - Sa xu·ªëng tr∆∞·ªõc 5 gi√¢y, nh∆∞ng kh√¥ng ch·∫°m gi∆∞·ªùng",
                "2 - C√≥ c·ªë g·∫Øng ch·ªëng tr·ªçng l·ª±c, nh∆∞ng sa xu·ªëng gi∆∞·ªùng",
                "3 - Kh√¥ng ch·ªëng ƒë∆∞·ª£c tr·ªçng l·ª±c, r∆°i ngay",
                "4 - Kh√¥ng c·ª≠ ƒë·ªông"
            ],
            key="leg_r"
        )
        leg_r_score = int(leg_right[0])
        
        st.markdown("---")
        
        # 7. Limb Ataxia
        st.markdown("#### 7. M·∫•t ƒêi·ªÅu H√≤a Chi (Ataxia)")
        st.caption("Test: Ng√≥n tay ch·∫°m m≈©i, g√≥t ch√¢n ch·∫°m ƒë·∫ßu g·ªëi")
        ataxia = st.radio(
            "ƒê√°nh gi√°:",
            [
                "0 - Kh√¥ng c√≥",
                "1 - C√≥ ·ªü 1 chi",
                "2 - C√≥ ·ªü 2 chi ho·∫∑c nhi·ªÅu h∆°n"
            ],
            key="ataxia"
        )
        ataxia_score = int(ataxia[0])
        
        # 8. Sensory
        st.markdown("#### 8. C·∫£m Gi√°c")
        st.caption("Test kim ch√¢m nh·∫π, so s√°nh 2 b√™n")
        sensory = st.radio(
            "ƒê√°nh gi√°:",
            [
                "0 - B√¨nh th∆∞·ªùng, kh√¥ng gi·∫£m",
                "1 - Gi·∫£m nh·∫π ƒë·∫øn trung b√¨nh",
                "2 - Gi·∫£m n·∫∑ng ho·∫∑c m·∫•t ho√†n to√†n"
            ],
            key="sensory"
        )
        sensory_score = int(sensory[0])
        
        # 9. Best Language (Aphasia)
        st.markdown("#### 9. Ng√¥n Ng·ªØ (Aphasia)")
        st.caption("M√¥ t·∫£ tranh, ƒë·ªçc c√¢u, ƒë·∫∑t t√™n v·∫≠t")
        language = st.radio(
            "ƒê√°nh gi√°:",
            [
                "0 - B√¨nh th∆∞·ªùng, kh√¥ng aphasia",
                "1 - Aphasia nh·∫π ƒë·∫øn trung b√¨nh (kh√≥ hi·ªÉu m·ªôt ph·∫ßn)",
                "2 - Aphasia n·∫∑ng (giao ti·∫øp r·∫•t kh√≥)",
                "3 - C√¢m ho·∫∑c ho√†n to√†n kh√¥ng hi·ªÉu/kh√¥ng n√≥i ƒë∆∞·ª£c"
            ],
            key="language"
        )
        language_score = int(language[0])
        
        # 10. Dysarthria
        st.markdown("#### 10. Kh√≥ Ph√°t √Çm (Dysarthria)")
        st.caption("ƒê·ªçc danh s√°ch t·ª´: M·∫π, B√†, C·∫ßu...")
        dysarthria = st.radio(
            "ƒê√°nh gi√°:",
            [
                "0 - B√¨nh th∆∞·ªùng, ph√°t √¢m r√µ r√†ng",
                "1 - Kh√≥ ph√°t √¢m nh·∫π ƒë·∫øn trung b√¨nh",
                "2 - Kh√≥ ph√°t √¢m n·∫∑ng, kh√¥ng hi·ªÉu ƒë∆∞·ª£c"
            ],
            key="dysarthria"
        )
        dysarthria_score = int(dysarthria[0])
        
        # 11. Extinction/Inattention (Neglect)
        st.markdown("#### 11. B·ªè Qua/Kh√¥ng Ch√∫ √ù (Neglect)")
        st.caption("Test k√≠ch th√≠ch ƒë·ªìng th·ªùi 2 b√™n (x√∫c gi√°c, th·ªã gi√°c)")
        neglect = st.radio(
            "ƒê√°nh gi√°:",
            [
                "0 - Kh√¥ng c√≥",
                "1 - B·ªè qua 1 gi√°c quan (x√∫c gi√°c HO·∫∂C th·ªã gi√°c)",
                "2 - B·ªè qua nhi·ªÅu h∆°n 1 gi√°c quan"
            ],
            key="neglect"
        )
        neglect_score = int(neglect[0])
        
        st.markdown("---")
        
        if st.button("üßÆ T√≠nh NIHSS Score", type="primary", use_container_width=True):
            # Calculate total
            total_score = (
                loc_score + loc_q_score + loc_c_score +
                gaze_score + visual_score + facial_score +
                arm_l_score + arm_r_score +
                leg_l_score + leg_r_score +
                ataxia_score + sensory_score +
                language_score + dysarthria_score + neglect_score
            )
            
            # Determine severity
            if total_score == 0:
                severity = "KH√îNG C√ì ƒê·ªòT QU·ª¥"
                color = "success"
                thrombolysis = "Kh√¥ng"
            elif total_score <= 4:
                severity = "ƒê·ªòT QU·ª¥ NH·∫∏"
                color = "info"
                thrombolysis = "C√¢n nh·∫Øc (n·∫øu tri·ªáu ch·ª©ng disabling)"
            elif total_score <= 15:
                severity = "ƒê·ªòT QU·ª¥ TRUNG B√åNH"
                color = "warning"
                thrombolysis = "C√≥ ch·ªâ ƒë·ªãnh (n·∫øu trong th·ªùi gian v√†ng)"
            elif total_score <= 20:
                severity = "ƒê·ªòT QU·ª¥ TRUNG B√åNH - N·∫∂NG"
                color = "warning"
                thrombolysis = "C√≥ ch·ªâ ƒë·ªãnh cao"
            else:
                severity = "ƒê·ªòT QU·ª¥ N·∫∂NG"
                color = "error"
                thrombolysis = "C√≥ ch·ªâ ƒë·ªãnh cao + xem x√©t thrombectomy"
            
            with col2:
                st.markdown("### üìä K·∫øt Qu·∫£")
                
                if color == "success":
                    st.success(f"## NIHSS = {total_score}")
                    st.success(f"**{severity}**")
                elif color == "info":
                    st.info(f"## NIHSS = {total_score}")
                    st.info(f"**{severity}**")
                elif color == "warning":
                    st.warning(f"## NIHSS = {total_score}")
                    st.warning(f"**{severity}**")
                else:
                    st.error(f"## NIHSS = {total_score}")
                    st.error(f"**{severity}**")
            
            st.markdown("---")
            st.markdown("### üí° Chi Ti·∫øt ƒêi·ªÉm S·ªë")
            
            details = [
                f"1a. √ù th·ª©c: {loc_score}",
                f"1b. C√¢u h·ªèi: {loc_q_score}",
                f"1c. L√†m theo l·ªánh: {loc_c_score}",
                f"2. V·∫≠n nh√£n: {gaze_score}",
                f"3. Th·ªã tr∆∞·ªùng: {visual_score}",
                f"4. Li·ªát m·∫∑t: {facial_score}",
                f"5a. Tay tr√°i: {arm_l_score}",
                f"5b. Tay ph·∫£i: {arm_r_score}",
                f"6a. Ch√¢n tr√°i: {leg_l_score}",
                f"6b. Ch√¢n ph·∫£i: {leg_r_score}",
                f"7. Ataxia: {ataxia_score}",
                f"8. C·∫£m gi√°c: {sensory_score}",
                f"9. Ng√¥n ng·ªØ: {language_score}",
                f"10. Ph√°t √¢m: {dysarthria_score}",
                f"11. Neglect: {neglect_score}",
            ]
            
            cols = st.columns(3)
            for idx, detail in enumerate(details):
                with cols[idx % 3]:
                    st.write(f"‚Ä¢ {detail}")
            
            st.markdown(f"**‚Üí T·ªïng ƒëi·ªÉm: {total_score}/42**")
            
            st.markdown("---")
            st.markdown("### üíä Khuy·∫øn C√°o ƒêi·ªÅu Tr·ªã")
            
            if total_score == 0:
                st.success("""
                **NIHSS = 0 - Kh√¥ng c√≥ ƒë·ªôt qu·ªµ**
                
                - Xem x√©t ch·∫©n ƒëo√°n kh√°c
                - C√≥ th·ªÉ l√† TIA (Transient Ischemic Attack)
                - Theo d√µi, ƒë√°nh gi√° nguy c∆° ƒë·ªôt qu·ªµ
                """)
            elif total_score <= 4:
                st.info(f"""
                **NIHSS = {total_score} - ƒê·ªôt Qu·ªµ Nh·∫π**
                
                **Thrombolysis (rt-PA):**
                - {thrombolysis}
                - C√¢n nh·∫Øc n·∫øu tri·ªáu ch·ª©ng g√¢y b·∫•t l·ª±c (disabling)
                - C√¢n nh·∫Øc nguy c∆°/l·ª£i √≠ch
                
                **Th·ªùi gian v√†ng:**
                - IV rt-PA: Trong 4.5 gi·ªù t·ª´ kh·ªüi ph√°t
                - C√†ng s·ªõm c√†ng t·ªët!
                
                **ƒêi·ªÅu tr·ªã:**
                - Aspirin 300mg sau 24h (n·∫øu c√≥ thrombolysis)
                - Ho·∫∑c ngay n·∫øu kh√¥ng thrombolysis
                - Ki·ªÉm so√°t huy·∫øt √°p
                - T√¨m nguy√™n nh√¢n (Echo, Doppler c·∫£nh, ECG)
                """)
            elif total_score <= 15:
                st.warning(f"""
                **NIHSS = {total_score} - ƒê·ªôt Qu·ªµ Trung B√¨nh**
                
                **Thrombolysis:**
                - ‚úÖ **{thrombolysis}**
                - N·∫øu trong **4.5 gi·ªù** t·ª´ kh·ªüi ph√°t
                - Kh√¥ng c√≥ ch·ªëng ch·ªâ ƒë·ªãnh
                
                **Li·ªÅu rt-PA:**
                - 0.9 mg/kg (max 90mg)
                - 10% IV bolus trong 1 ph√∫t
                - 90% IV infusion trong 60 ph√∫t
                
                **Thrombectomy:**
                - Xem x√©t n·∫øu t·∫Øc m·∫°ch l·ªõn (LVO)
                - Trong 6 gi·ªù (c√≥ th·ªÉ k√©o d√†i ƒë·∫øn 24h n·∫øu c√≥ imaging ph√π h·ª£p)
                
                **ChƒÉm s√≥c:**
                - Stroke unit
                - Monitoring BP, glucose, O2
                - Ph√≤ng bi·∫øn ch·ª©ng
                """)
            elif total_score <= 20:
                st.warning(f"""
                **NIHSS = {total_score} - ƒê·ªôt Qu·ªµ Trung B√¨nh - N·∫∑ng**
                
                **Thrombolysis:**
                - ‚úÖ **{thrombolysis}**
                - URGENT - Trong 4.5 gi·ªù
                
                **Thrombectomy:**
                - ‚úÖ **Ch·ªâ ƒë·ªãnh cao** n·∫øu t·∫Øc m·∫°ch l·ªõn
                - CTA/MRA ƒë·ªÉ x√°c ƒë·ªãnh
                - Trong 6-24 gi·ªù t√πy imaging
                
                **ChƒÉm s√≥c ICU:**
                - Monitoring s√°t
                - Qu·∫£n l√Ω ICP n·∫øu c√≥ ph√π n√£o
                - Ph√≤ng bi·∫øn ch·ª©ng
                """)
            else:
                st.error(f"""
                **NIHSS = {total_score} - ƒê·ªôt Qu·ªµ N·∫∂NG** üö®
                
                **ƒêi·ªÅu tr·ªã URGENT:**
                
                **1. Thrombolysis:**
                - ‚úÖ Ch·ªâ ƒë·ªãnh cao (n·∫øu trong 4.5h)
                - ƒê√°nh gi√° nguy c∆° ch·∫£y m√°u k·ªπ
                
                **2. Thrombectomy:**
                - ‚úÖ **Ch·ªâ ƒë·ªãnh cao** n·∫øu LVO (Large Vessel Occlusion)
                - Transfer to Stroke Center ngay n·∫øu kh√¥ng c√≥ DSA
                - Time is brain!
                
                **3. ICU Management:**
                - Monitoring s√°t (BP, ICP, glucose)
                - Intubation n·∫øu GCS ‚â§8 ho·∫∑c kh√¥ng b·∫£o v·ªá ƒë∆∞·ª£c ƒë∆∞·ªùng th·ªü
                - Qu·∫£n l√Ω ph√π n√£o (Mannitol, Hypertonic saline)
                - Xem x√©t decompressive craniectomy n·∫øu MCA l·ªõn
                
                **4. Bi·∫øn ch·ª©ng:**
                - Ch·∫£y m√°u chuy·ªÉn d·∫°ng (5-10%)
                - Ph√π n√£o (24-48h sau)
                - Suy h√¥ h·∫•p
                - Aspiration pneumonia
                
                **Ti√™n l∆∞·ª£ng:** X·∫•u, t·ª∑ l·ªá t·ª≠ vong v√† t√†n ph·∫ø cao
                """)
            
            st.markdown("---")
            st.markdown("### üìä Di·ªÖn Gi·∫£i & Ti√™n L∆∞·ª£ng")
            
            st.info(f"""
            **NIHSS = {total_score} - {severity}**
            
            **Ph√¢n t·∫ßng m·ª©c ƒë·ªô:**
            - 0: Kh√¥ng tri·ªáu ch·ª©ng
            - 1-4: ƒê·ªôt qu·ªµ nh·∫π
            - 5-15: ƒê·ªôt qu·ªµ trung b√¨nh
            - 16-20: ƒê·ªôt qu·ªµ trung b√¨nh - n·∫∑ng
            - 21-42: ƒê·ªôt qu·ªµ n·∫∑ng
            
            **Gi√° tr·ªã ti√™n l∆∞·ª£ng:**
            - NIHSS ‚â§10: 60-70% h·ªìi ph·ª•c t·ªët (mRS 0-2)
            - NIHSS >10: Ch·ªâ 15-30% h·ªìi ph·ª•c t·ªët
            - NIHSS >20: T·ª∑ l·ªá t·ª≠ vong cao (20-40%)
            
            **C·∫£i thi·ªán ƒëi·ªÉm:**
            - Gi·∫£m 4-8 ƒëi·ªÉm: C·∫£i thi·ªán l√¢m s√†ng c√≥ √Ω nghƒ©a
            - Gi·∫£m ‚â•10 ƒëi·ªÉm: C·∫£i thi·ªán xu·∫•t s·∫Øc
            
            **Ch·ªâ ƒë·ªãnh Thrombolysis:**
            - Th∆∞·ªùng: NIHSS 5-25
            - NIHSS <5: C√¢n nh·∫Øc n·∫øu disabling
            - NIHSS >25: C√¢n nh·∫Øc (nguy c∆° ch·∫£y m√°u cao h∆°n)
            """)
            
            with st.expander("üìö T√†i Li·ªáu Tham Kh·∫£o"):
                st.markdown(f"""
                **NIHSS - NIH Stroke Scale**
                
                **K·∫øt qu·∫£ c·ªßa b·∫°n:** {total_score}/42 - {severity}
                
                **C·∫•u tr√∫c thang ƒëi·ªÉm:**
                - 11 h·∫°ng m·ª•c
                - T·ªïng ƒëi·ªÉm: 0-42
                - ƒêi·ªÉm c√†ng cao, ƒë·ªôt qu·ªµ c√†ng n·∫∑ng
                
                **∆Øu ƒëi·ªÉm:**
                - Thang ƒëi·ªÉm chu·∫©n v√†ng to√†n c·∫ßu
                - Validated r·ªông r√£i
                - D·ªÖ th·ª±c hi·ªán (5-10 ph√∫t)
                - T∆∞∆°ng quan t·ªët v·ªõi k·∫øt c·ª•c
                - Quy·∫øt ƒë·ªãnh thrombolysis/thrombectomy
                
                **H·∫°n ch·∫ø:**
                - C·∫ßn training ƒë·ªÉ ƒë√°nh gi√° ch√≠nh x√°c
                - √çt nh·∫°y v·ªõi posterior circulation stroke
                - Kh√¥ng ƒë√°nh gi√° chi ti·∫øt aphasia
                
                **Th·ªùi gian v√†ng ƒëi·ªÅu tr·ªã:**
                - **IV rt-PA:** 0-4.5 gi·ªù (c√†ng s·ªõm c√†ng t·ªët!)
                - **Thrombectomy:** 0-6 gi·ªù (c√≥ th·ªÉ ƒë·∫øn 24h v·ªõi imaging ph√π h·ª£p)
                - **"Time is Brain":** M·ªói ph√∫t m·∫•t ƒëi 1.9 tri·ªáu neuron!
                
                **Ch·ªëng ch·ªâ ƒë·ªãnh Thrombolysis (m·ªôt s·ªë):**
                - Th·ªùi gian >4.5h (ho·∫∑c kh√¥ng r√µ th·ªùi gian kh·ªüi ph√°t)
                - BP >185/110 mmHg (kh√¥ng ki·ªÉm so√°t ƒë∆∞·ª£c)
                - Glucose <50 ho·∫∑c >400 mg/dL
                - INR >1.7, ƒëang d√πng NOAC <48h
                - Ti·ªÉu c·∫ßu <100,000
                - Ph·∫´u thu·∫≠t l·ªõn <14 ng√†y
                - ƒê·ªôt qu·ªµ n·∫∑ng ho·∫∑c ch·∫£y m√°u n√£o <3 th√°ng
                - Ch·∫£y m√°u ti√™u h√≥a/ti·∫øt ni·ªáu <21 ng√†y
                
                **References:**
                1. Brott T, et al. Measurements of acute cerebral infarction: a clinical examination scale. Stroke. 1989;20(7):864-870.
                
                2. Adams HP Jr, et al. Baseline NIH Stroke Scale score strongly predicts outcome after stroke: A report of the Trial of Org 10172 in Acute Stroke Treatment (TOAST). Neurology. 1999;53(1):126-131.
                
                3. Powers WJ, et al. 2018 Guidelines for the Early Management of Patients With Acute Ischemic Stroke (AHA/ASA). Stroke. 2018;49(3):e46-e110.
                
                **Guidelines:**
                - AHA/ASA Acute Ischemic Stroke Guidelines 2019
                - ESO Guidelines 2021
                - NICE Stroke Guidelines 2019
                
                **Training:**
                - NIHSS certification available online
                - Requires periodic re-certification
                """)
            
            st.markdown("---")
            st.warning("""
            ‚ö†Ô∏è **L∆∞u √ù Quan Tr·ªçng:**
            
            - **TIME IS BRAIN!** - ƒê·ªôt qu·ªµ l√† c·∫•p c·ª©u tuy·ªát ƒë·ªëi
            - **ƒê√°nh gi√° NIHSS** ph·∫£i ch√≠nh x√°c, c√≥ training
            - **Imaging** (CT/MRI) ƒë·ªÉ lo·∫°i tr·ª´ ch·∫£y m√°u tr∆∞·ªõc thrombolysis
            - **Ch·ªëng ch·ªâ ƒë·ªãnh** thrombolysis ph·∫£i ƒë∆∞·ª£c ƒë√°nh gi√° k·ªπ
            - **Monitoring** sau thrombolysis: BP, neuro check q15min √ó 2h, q30min √ó 6h, q1h √ó 16h
            - **Bi·∫øn ch·ª©ng** ch·∫£y m√°u n√£o: 5-10%, th∆∞·ªùng trong 24-36h ƒë·∫ßu
            
            **ABC c·ªßa ƒë·ªôt qu·ªµ:**
            - **A**irway - B·∫£o v·ªá ƒë∆∞·ªùng th·ªü
            - **B**lood pressure - Qu·∫£n l√Ω BP c·∫©n th·∫≠n
            - **C**T scan - CT n√£o ASAP ƒë·ªÉ lo·∫°i tr·ª´ ch·∫£y m√°u
            """)


