"""
DLQI - Dermatology Life Quality Index
Ch·ªâ s·ªë ch·∫•t l∆∞·ª£ng cu·ªôc s·ªëng b·ªánh da
"""

import streamlit as st

def calculate_dlqi(q1, q2, q3, q4, q5, q6, q7, q8, q9, q10):
    """T√≠nh DLQI"""
    total = q1 + q2 + q3 + q4 + q5 + q6 + q7 + q8 + q9 + q10
    
    if total <= 1:
        impact = "Kh√¥ng ·∫£nh h∆∞·ªüng"; color = "green"
    elif total <= 5:
        impact = "·∫¢nh h∆∞·ªüng nh·ªè"; color = "green"
    elif total <= 10:
        impact = "·∫¢nh h∆∞·ªüng trung b√¨nh"; color = "orange"
    elif total <= 20:
        impact = "·∫¢nh h∆∞·ªüng l·ªõn"; color = "orange"
    else:
        impact = "·∫¢nh h∆∞·ªüng r·∫•t l·ªõn"; color = "red"
    
    return {"total_score": total, "impact": impact, "color": color}

def render():
    st.markdown("<h2 style='text-align: center; color: #EC4899;'>ü©π DLQI</h2><p style='text-align: center;'><em>Ch·∫•t l∆∞·ª£ng cu·ªôc s·ªëng b·ªánh da</em></p>", unsafe_allow_html=True)
    
    with st.expander("‚ÑπÔ∏è DLQI"):
        st.markdown("**DLQI** ƒë√°nh gi√° ·∫£nh h∆∞·ªüng b·ªánh da ƒë·∫øn ch·∫•t l∆∞·ª£ng s·ªëng. **Thang ƒëi·ªÉm:** 0-30")
    
    st.markdown("---")
    st.info("**Trong 1 tu·∫ßn qua**, b·ªánh da ·∫£nh h∆∞·ªüng nh∆∞ th·∫ø n√†o?")
    
    options = [("R·∫•t nhi·ªÅu", 3), ("Nhi·ªÅu", 2), ("M·ªôt ch√∫t", 1), ("Kh√¥ng", 0)]
    
    q1 = st.radio("1. Ng·ª©a, ƒëau, c·∫£m gi√°c kh√≥ ch·ªãu?", [3,2,1,0], format_func=lambda x: dict(options)[x])
    q2 = st.radio("2. X·∫•u h·ªï, t·ª± ti?", [3,2,1,0], format_func=lambda x: dict(options)[x])
    q3 = st.radio("3. ·∫¢nh h∆∞·ªüng mua s·∫Øm ho·∫∑c chƒÉm s√≥c nh√†?", [3,2,1,0], format_func=lambda x: dict(options)[x])
    q4 = st.radio("4. ·∫¢nh h∆∞·ªüng ch·ªçn qu·∫ßn √°o?", [3,2,1,0], format_func=lambda x: dict(options)[x])
    q5 = st.radio("5. ·∫¢nh h∆∞·ªüng ho·∫°t ƒë·ªông x√£ h·ªôi/gi·∫£i tr√≠?", [3,2,1,0], format_func=lambda x: dict(options)[x])
    q6 = st.radio("6. ·∫¢nh h∆∞·ªüng th·ªÉ thao?", [3,2,1,0], format_func=lambda x: dict(options)[x])
    q7 = st.radio("7. NgƒÉn c·∫£n l√†m vi·ªác/h·ªçc t·∫≠p?", [3,2,1,0], format_func=lambda x: dict(options)[x])
    q8 = st.radio("8. G√¢y v·∫•n ƒë·ªÅ v·ªõi b·∫°n b√®/ng∆∞·ªùi th√¢n?", [3,2,1,0], format_func=lambda x: dict(options)[x])
    q9 = st.radio("9. G√¢y kh√≥ khƒÉn t√¨nh d·ª•c?", [3,2,1,0], format_func=lambda x: dict(options)[x])
    q10 = st.radio("10. ƒêi·ªÅu tr·ªã g√¢y phi·ªÅn to√°i?", [3,2,1,0], format_func=lambda x: dict(options)[x])
    
    if st.button("üî¨ T√≠nh DLQI", type="primary", use_container_width=True):
        result = calculate_dlqi(q1,q2,q3,q4,q5,q6,q7,q8,q9,q10)
        score_color = {"green": "#28a745", "orange": "#fd7e14", "red": "#dc3545"}[result["color"]]
        
        st.markdown(f"<div style='background: linear-gradient(135deg, {score_color}22 0%, {score_color}44 100%); padding: 30px; border-radius: 15px; border-left: 5px solid {score_color}; margin: 20px 0;'><h2 style='color: {score_color}; margin: 0; text-align: center;'>DLQI: {result['total_score']}/30</h2></div>", unsafe_allow_html=True)
        
        st.markdown(f"<div style='background-color: {score_color}22; padding: 20px; border-radius: 10px; border: 2px solid {score_color};'><h3 style='color: {score_color};'>üéØ ·∫¢nh h∆∞·ªüng: {result['impact']}</h3></div>", unsafe_allow_html=True)
        
        st.info("""
        **Ph√¢n lo·∫°i:**
        - 0-1: Kh√¥ng ·∫£nh h∆∞·ªüng
        - 2-5: ·∫¢nh h∆∞·ªüng nh·ªè
        - 6-10: ·∫¢nh h∆∞·ªüng trung b√¨nh
        - 11-20: ·∫¢nh h∆∞·ªüng l·ªõn
        - 21-30: ·∫¢nh h∆∞·ªüng r·∫•t l·ªõn
        """)

if __name__ == "__main__":
    render()

