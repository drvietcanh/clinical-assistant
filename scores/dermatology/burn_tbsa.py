"""
Burn TBSA Calculator - Rule of Nines
T√≠nh di·ªán t√≠ch b·ªèng theo Quy t·∫Øc s·ªë 9
"""

import streamlit as st


def calculate_tbsa(head, chest, abdomen, back_upper, back_lower, 
                   arm_right, arm_left, leg_right, leg_left, genitalia):
    """T√≠nh % TBSA b·ªèng"""
    total = (head + chest + abdomen + back_upper + back_lower + 
             arm_right + arm_left + leg_right + leg_left + genitalia)
    
    if total < 10:
        severity = "Nh·∫π (Minor)"
        management = "ƒêi·ªÅu tr·ªã ngo·∫°i tr√∫ n·∫øu kh√¥ng b·ªèng s√¢u"
        color = "green"
    elif total < 20:
        severity = "Trung b√¨nh (Moderate)"
        management = "C·∫ßn nh·∫≠p vi·ªán"
        color = "orange"
    else:
        severity = "N·∫∑ng (Major)"
        management = "C·∫ßn chuy·ªÉn trung t√¢m b·ªèng, h·ªìi s·ª©c t√≠ch c·ª±c"
        color = "red"
    
    # Parkland formula
    fluid_24h = total * 4  # ml/kg (will multiply by weight)
    
    return {"total_tbsa": total, "severity": severity, "management": management, 
            "color": color, "fluid_factor": fluid_24h}


def render():
    """Render Burn TBSA calculator interface"""
    
    st.markdown("""
    <h2 style='text-align: center; color: #F59E0B;'>üî• Burn TBSA - Rule of Nines</h2>
    <p style='text-align: center;'><em>T√≠nh di·ªán t√≠ch b·ªèng (Total Body Surface Area)</em></p>
    """, unsafe_allow_html=True)
    
    with st.expander("‚ÑπÔ∏è Quy t·∫Øc s·ªë 9 (Rule of Nines)"):
        st.markdown("""
        **Rule of Nines** l√† ph∆∞∆°ng ph√°p nhanh ∆∞·ªõc t√≠nh % di·ªán t√≠ch b·ªèng ·ªü ng∆∞·ªùi l·ªõn.
        
        **Ph√¢n b·ªë theo 9% ho·∫∑c b·ªôi s·ªë c·ªßa 9:**
        - ƒê·∫ßu c·ªï: 9%
        - M·ªói tay: 9%
        - Ng·ª±c: 9%
        - B·ª•ng: 9%
        - L∆∞ng tr√™n: 9%
        - L∆∞ng d∆∞·ªõi: 9%
        - M·ªói ch√¢n (m·∫∑t tr∆∞·ªõc): 9%
        - M·ªói ch√¢n (m·∫∑t sau): 9%
        - B·ªô ph·∫≠n sinh d·ª•c: 1%
        
        **T·ªïng = 100%**
        
        **L∆∞u √Ω:** Ch·ªâ t√≠nh b·ªèng ƒë·ªô 2 v√† ƒë·ªô 3 (kh√¥ng t√≠nh ƒë·ªô 1)
        """)
    
    st.markdown("---")
    st.subheader("üìù Ch·ªçn v√πng b·ªã b·ªèng")
    
    st.info("üí° Ch·ªâ t√≠nh b·ªèng ƒë·ªô 2 (ph·ªìng r·ªôp) v√† ƒë·ªô 3 (da ch·∫øt), kh√¥ng t√≠nh ƒë·ªô 1 (ƒë·ªè)")
    
    col1, col2 = st.columns(2)
    
    with col1:
        head = st.selectbox("üë§ ƒê·∫ßu + C·ªï", [0, 9], format_func=lambda x: f"{x}%" if x > 0 else "Kh√¥ng b·ªèng")
        chest = st.selectbox("ü´Å Ng·ª±c", [0, 9], format_func=lambda x: f"{x}%" if x > 0 else "Kh√¥ng b·ªèng")
        abdomen = st.selectbox("ü´É B·ª•ng", [0, 9], format_func=lambda x: f"{x}%" if x > 0 else "Kh√¥ng b·ªèng")
        back_upper = st.selectbox("‚¨ÜÔ∏è L∆∞ng tr√™n", [0, 9], format_func=lambda x: f"{x}%" if x > 0 else "Kh√¥ng b·ªèng")
        back_lower = st.selectbox("‚¨áÔ∏è L∆∞ng d∆∞·ªõi", [0, 9], format_func=lambda x: f"{x}%" if x > 0 else "Kh√¥ng b·ªèng")
        genitalia = st.selectbox("üîª B·ªô ph·∫≠n sinh d·ª•c", [0, 1], format_func=lambda x: f"{x}%" if x > 0 else "Kh√¥ng b·ªèng")
    
    with col2:
        arm_right = st.selectbox("ü¶æ Tay ph·∫£i", [0, 9], format_func=lambda x: f"{x}%" if x > 0 else "Kh√¥ng b·ªèng")
        arm_left = st.selectbox("ü¶æ Tay tr√°i", [0, 9], format_func=lambda x: f"{x}%" if x > 0 else "Kh√¥ng b·ªèng")
        leg_right = st.selectbox("ü¶µ Ch√¢n ph·∫£i (m·∫∑t tr∆∞·ªõc + sau)", [0, 9, 18], 
                                format_func=lambda x: f"{x}%" if x > 0 else "Kh√¥ng b·ªèng")
        leg_left = st.selectbox("ü¶µ Ch√¢n tr√°i (m·∫∑t tr∆∞·ªõc + sau)", [0, 9, 18],
                               format_func=lambda x: f"{x}%" if x > 0 else "Kh√¥ng b·ªèng")
    
    st.markdown("---")
    
    # Weight for Parkland formula
    weight = st.number_input("‚öñÔ∏è C√¢n n·∫∑ng (kg) - ƒë·ªÉ t√≠nh Parkland formula",
                            min_value=10.0, max_value=200.0, value=70.0, step=1.0)
    
    st.markdown("---")
    
    if st.button("üî¨ T√≠nh TBSA", type="primary", use_container_width=True):
        result = calculate_tbsa(head, chest, abdomen, back_upper, back_lower,
                               arm_right, arm_left, leg_right, leg_left, genitalia)
        
        score_color = {
            "green": "#28a745",
            "orange": "#fd7e14",
            "red": "#dc3545"
        }[result["color"]]
        
        st.markdown(f"""
        <div style='background: linear-gradient(135deg, {score_color}22 0%, {score_color}44 100%); 
                    padding: 30px; border-radius: 15px; border-left: 5px solid {score_color}; margin: 20px 0;'>
            <h2 style='color: {score_color}; margin: 0; text-align: center;'>
                TBSA: {result['total_tbsa']}%
            </h2>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown(f"""
        <div style='background-color: {score_color}22; padding: 20px; border-radius: 10px; border: 2px solid {score_color};'>
            <h3 style='color: {score_color};'>M·ª©c ƒë·ªô: {result['severity']}</h3>
            <p style='font-size: 1.1em;'>{result['management']}</p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("---")
        st.markdown("### üíß Parkland Formula - D·ªãch truy·ªÅn 24h ƒë·∫ßu")
        
        total_fluid = result["fluid_factor"] * weight
        first_8h = total_fluid / 2
        next_16h = total_fluid / 2
        
        col1, col2, col3 = st.columns(3)
        with col1:
            st.metric("T·ªïng 24h", f"{total_fluid:.0f} ml")
        with col2:
            st.metric("8h ƒë·∫ßu", f"{first_8h:.0f} ml")
        with col3:
            st.metric("16h sau", f"{next_16h:.0f} ml")
        
        st.info(f"""
        **Parkland Formula:** {result['total_tbsa']}% √ó 4 ml √ó {weight} kg = **{total_fluid:.0f} ml** Ringer Lactate trong 24h
        
        - **50% (={first_8h:.0f} ml)** trong 8 gi·ªù ƒë·∫ßu (t√≠nh t·ª´ l√∫c b·ªèng)
        - **50% (={next_16h:.0f} ml)** trong 16 gi·ªù ti·∫øp theo
        
        ‚è±Ô∏è T·ªëc ƒë·ªô truy·ªÅn 8h ƒë·∫ßu: ~{first_8h/8:.0f} ml/gi·ªù
        """)
        
        st.warning("""
        ‚ö†Ô∏è **L∆∞u √Ω quan tr·ªçng:**
        - Parkland ch·ªâ l√† c√¥ng th·ª©c kh·ªüi ƒë·∫ßu
        - ƒêi·ªÅu ch·ªânh theo n∆∞·ªõc ti·ªÉu: M·ª•c ti√™u 0.5-1 ml/kg/h (ng∆∞·ªùi l·ªõn)
        - Theo d√µi s√°t: BP, HR, n∆∞·ªõc ti·ªÉu, lactate
        """)


if __name__ == "__main__":
    render()

