"""
RIFLE Criteria for Acute Kidney Injury
========================================

One of the first standardized classification systems for AKI (now superseded by KDIGO)

Reference:
- Bellomo R, et al. Acute renal failure - definition, outcome measures, animal models,
  fluid therapy and information technology needs: the Second International Consensus
  Conference of the Acute Dialysis Quality Initiative (ADQI) Group. Crit Care. 2004;8(4):R204-212.

RIFLE Categories (increasing severity):
- Risk
- Injury
- Failure
- Loss (of kidney function)
- ESRD (End-Stage Renal Disease)

Note: KDIGO has largely replaced RIFLE in modern practice, but RIFLE is still used in some
settings and has extensive historical validation data.
"""

import streamlit as st


def calculate_rifle(
    scr_baseline: float,
    scr_current: float,
    gfr_decrease_percent: float,
    urine_output_6h: float,
    urine_output_12h: float,
    weight: float
) -> dict:
    """Calculate RIFLE classification"""
    
    # Calculate creatinine fold increase
    if scr_baseline > 0:
        scr_fold = scr_current / scr_baseline
    else:
        scr_fold = 0
    
    # Calculate UO rate
    uo_6h_rate = (urine_output_6h / 6 / weight) if weight > 0 and urine_output_6h >= 0 else None
    uo_12h_rate = (urine_output_12h / 12 / weight) if weight > 0 and urine_output_12h >= 0 else None
    
    # Determine category
    category_by_scr = 0  # 0=none, 1=Risk, 2=Injury, 3=Failure
    category_by_uo = 0
    
    # SCr/GFR criteria
    if scr_fold >= 3.0 or gfr_decrease_percent >= 75 or scr_current >= 4.0:
        category_by_scr = 3  # Failure
    elif scr_fold >= 2.0 or gfr_decrease_percent >= 50:
        category_by_scr = 2  # Injury
    elif scr_fold >= 1.5 or gfr_decrease_percent >= 25:
        category_by_scr = 1  # Risk
    
    # UO criteria
    if uo_12h_rate is not None:
        if uo_12h_rate < 0.3 or urine_output_12h == 0:
            category_by_uo = 3  # Failure
        elif uo_12h_rate < 0.5:
            category_by_uo = 2  # Injury
    
    if uo_6h_rate is not None and category_by_uo < 1:
        if uo_6h_rate < 0.5:
            category_by_uo = 1  # Risk
    
    final_category = max(category_by_scr, category_by_uo)
    
    categories = ["Kh√¥ng AKI", "Risk", "Injury", "Failure"]
    colors = ["üü¢", "üü°", "üü†", "üî¥"]
    
    return {
        'category': final_category,
        'category_name': categories[final_category],
        'color': colors[final_category],
        'scr_fold': scr_fold,
        'uo_6h_rate': uo_6h_rate,
        'uo_12h_rate': uo_12h_rate
    }


def render():
    """Render RIFLE calculator"""
    
    st.title("üß™ RIFLE Criteria - Acute Kidney Injury")
    st.markdown("**H·ªá th·ªëng ph√¢n lo·∫°i AKI (Historical - KDIGO khuy·∫øn c√°o h∆°n)**")
    
    st.info("""
    **‚ÑπÔ∏è L∆∞u √ù:**
    
    RIFLE l√† m·ªôt trong nh·ªØng h·ªá th·ªëng ph√¢n lo·∫°i AKI TI√äN PHONG (2004), nh∆∞ng hi·ªán nay ƒë√£ ƒë∆∞·ª£c 
    **thay th·∫ø b·ªüi KDIGO** (2012) trong h·∫ßu h·∫øt c√°c guidelines hi·ªán ƒë·∫°i.
    
    **Khuy·∫øn c√°o:** S·ª≠ d·ª•ng **KDIGO** ƒë·ªÉ ƒë√°nh gi√° AKI theo guidelines hi·ªán t·∫°i.
    
    RIFLE v·∫´n h·ªØu √≠ch cho:
    - Nghi√™n c·ª©u s·ª≠ d·ª•ng RIFLE criteria
    - So s√°nh v·ªõi d·ªØ li·ªáu l·ªãch s·ª≠
    - Hi·ªÉu di·ªÖn ti·∫øn c·ªßa AKI classification
    """)
    
    with st.expander("‚ÑπÔ∏è Th√¥ng Tin RIFLE"):
        st.markdown("""
        ### RIFLE Categories
        
        | Ph√¢n Lo·∫°i | Creatinine / GFR | N∆∞·ªõc Ti·ªÉu |
        |-----------|------------------|-----------|
        | **Risk** | SCr √ó1.5 HO·∫∂C GFR gi·∫£m >25% | <0.5 mL/kg/h √ó 6h |
        | **Injury** | SCr √ó2 HO·∫∂C GFR gi·∫£m >50% | <0.5 mL/kg/h √ó 12h |
        | **Failure** | SCr √ó3 HO·∫∂C GFR gi·∫£m >75% HO·∫∂C SCr ‚â•4 mg/dL | <0.3 mL/kg/h √ó 24h HO·∫∂C anuria √ó 12h |
        | **Loss** | M·∫•t ch·ª©c nƒÉng th·∫≠n ho√†n to√†n >4 tu·∫ßn | |
        | **ESRD** | ESRD >3 th√°ng | |
        
        **T√†i li·ªáu:** Bellomo R, et al. *Crit Care* 2004;8:R204-212
        """)
    
    st.divider()
    
    # Simplified input
    col1, col2 = st.columns(2)
    
    with col1:
        scr_baseline = st.number_input("SCr Baseline (mg/dL)", 0.0, 20.0, 1.0, 0.1)
        scr_current = st.number_input("SCr Hi·ªán T·∫°i (mg/dL)", 0.0, 20.0, 1.5, 0.1)
        gfr_decrease_percent = st.number_input("GFR Gi·∫£m (%)", 0.0, 100.0, 0.0, 1.0)
    
    with col2:
        weight = st.number_input("C√¢n N·∫∑ng (kg)", 0.0, 300.0, 70.0, 1.0)
        urine_output_6h = st.number_input("N∆∞·ªõc ti·ªÉu 6h (mL)", -1.0, 5000.0, -1.0, 10.0)
        urine_output_12h = st.number_input("N∆∞·ªõc ti·ªÉu 12h (mL)", -1.0, 10000.0, -1.0, 10.0)
    
    if st.button("üßÆ ƒê√°nh Gi√° RIFLE", type="primary"):
        result = calculate_rifle(scr_baseline, scr_current, gfr_decrease_percent, 
                                 urine_output_6h, urine_output_12h, weight)
        
        st.subheader("üìä K·∫øt Qu·∫£")
        st.markdown(f"### {result['color']} {result['category_name']}")
        
        if result['scr_fold'] > 0:
            st.caption(f"Creatinine: {scr_baseline:.2f} ‚Üí {scr_current:.2f} mg/dL ({result['scr_fold']:.2f}√ó)")
        
        if result['category'] > 0:
            st.warning("""
            ‚ö†Ô∏è **Khuy·∫øn c√°o:**
            
            ƒê·ªÉ ƒë√°nh gi√° v√† qu·∫£n l√Ω AKI theo guidelines hi·ªán ƒë·∫°i, vui l√≤ng s·ª≠ d·ª•ng **KDIGO Criteria**
            (c√≥ trong c√πng module Nephrology).
            
            KDIGO cung c·∫•p:
            - Ph√¢n lo·∫°i ch√≠nh x√°c h∆°n (Stage 1, 2, 3)
            - H∆∞·ªõng d·∫´n qu·∫£n l√Ω c·∫≠p nh·∫≠t
            - Ti√™u chu·∫©n qu·ªëc t·∫ø hi·ªán h√†nh
            """)
        
        st.session_state['rifle_result'] = result

