"""
BMI, IBW, BSA Calculator
Body Mass Index, Ideal Body Weight, Body Surface Area
"""

import streamlit as st
import math


def calculate_bmi(weight, height_cm):
    """Calculate BMI"""
    height_m = height_cm / 100
    bmi = weight / (height_m ** 2)
    return bmi


def calculate_ibw(height_cm, gender):
    """Calculate Ideal Body Weight (Devine formula)"""
    if gender == "male":
        ibw = 50 + 0.91 * (height_cm - 152.4)
    else:  # female
        ibw = 45.5 + 0.91 * (height_cm - 152.4)
    
    return max(ibw, 0)  # Ensure non-negative


def calculate_abw(actual_weight, ibw):
    """Calculate Adjusted Body Weight"""
    abw = ibw + 0.4 * (actual_weight - ibw)
    return abw


def calculate_bsa_mosteller(weight, height_cm):
    """Calculate BSA using Mosteller formula (most commonly used)"""
    bsa = math.sqrt((weight * height_cm) / 3600)
    return bsa


def calculate_bsa_dubois(weight, height_cm):
    """Calculate BSA using DuBois formula"""
    bsa = 0.007184 * (weight ** 0.425) * (height_cm ** 0.725)
    return bsa


def render():
    """Render BMI/IBW/BSA calculator interface"""
    
    st.markdown("""
    <h2 style='text-align: center; color: #0EA5E9;'>üìè BMI | IBW | BSA Calculator</h2>
    <p style='text-align: center;'><em>Ch·ªâ s·ªë c∆° th·ªÉ - Body Mass Index, Ideal Weight, Body Surface Area</em></p>
    """, unsafe_allow_html=True)
    
    # Th√¥ng tin
    with st.expander("‚ÑπÔ∏è Gi·ªõi thi·ªáu"):
        st.markdown("""
        **3 ch·ªâ s·ªë quan tr·ªçng v·ªÅ c∆° th·ªÉ:**
        
        ### 1Ô∏è‚É£ BMI (Body Mass Index) - Ch·ªâ s·ªë kh·ªëi c∆° th·ªÉ
        - **C√¥ng th·ª©c:** C√¢n n·∫∑ng (kg) / Chi·ªÅu cao¬≤ (m¬≤)
        - **M·ª•c ƒë√≠ch:** Ph√¢n lo·∫°i b√©o ph√¨, g·∫ßy, b√¨nh th∆∞·ªùng
        - **S·ª≠ d·ª•ng:** S√†ng l·ªçc, t∆∞ v·∫•n s·ª©c kh·ªèe
        
        ### 2Ô∏è‚É£ IBW (Ideal Body Weight) - C√¢n n·∫∑ng l√Ω t∆∞·ªüng
        - **C√¥ng th·ª©c Devine:** 
          - Nam: 50 + 0.91 √ó (chi·ªÅu cao cm - 152.4)
          - N·ªØ: 45.5 + 0.91 √ó (chi·ªÅu cao cm - 152.4)
        - **M·ª•c ƒë√≠ch:** T√≠nh li·ªÅu thu·ªëc, dinh d∆∞·ª°ng
        - **S·ª≠ d·ª•ng:** ƒêi·ªÅu ch·ªânh li·ªÅu (vd: aminoglycosides)
        
        ### 3Ô∏è‚É£ BSA (Body Surface Area) - Di·ªán t√≠ch c∆° th·ªÉ
        - **C√¥ng th·ª©c Mosteller:** ‚àö[(c√¢n n·∫∑ng √ó chi·ªÅu cao) / 3600]
        - **M·ª•c ƒë√≠ch:** T√≠nh li·ªÅu h√≥a tr·ªã, ch·ªâ s·ªë tim th·∫≠n
        - **S·ª≠ d·ª•ng:** Li·ªÅu h√≥a ch·∫•t, cardiac index, eGFR
        
        **ABW (Adjusted Body Weight):** D√πng cho b√©o ph√¨
        - ABW = IBW + 0.4 √ó (Actual - IBW)
        """)
    
    st.markdown("---")
    
    # Input form
    st.subheader("üìù Nh·∫≠p th√¥ng tin")
    
    col1, col2 = st.columns(2)
    
    with col1:
        height_cm = st.number_input(
            "Chi·ªÅu cao (cm)",
            min_value=100,
            max_value=250,
            value=170,
            step=1,
            help="Chi·ªÅu cao c·ªßa b·ªánh nh√¢n"
        )
        
        weight = st.number_input(
            "C√¢n n·∫∑ng (kg)",
            min_value=20.0,
            max_value=300.0,
            value=70.0,
            step=0.5,
            help="C√¢n n·∫∑ng hi·ªán t·∫°i"
        )
    
    with col2:
        gender = st.radio(
            "Gi·ªõi t√≠nh",
            options=["male", "female"],
            format_func=lambda x: "Nam" if x == "male" else "N·ªØ",
            horizontal=True,
            help="C·∫ßn cho t√≠nh IBW"
        )
        
        age = st.number_input(
            "Tu·ªïi (t√πy ch·ªçn)",
            min_value=0,
            max_value=120,
            value=40,
            step=1,
            help="ƒê·ªÉ tham kh·∫£o th√™m"
        )
    
    st.markdown("---")
    
    # Calculate button
    if st.button("üìä T√≠nh to√°n", type="primary", use_container_width=True):
        # Calculate all metrics
        bmi = calculate_bmi(weight, height_cm)
        ibw = calculate_ibw(height_cm, gender)
        abw = calculate_abw(weight, ibw)
        bsa_mosteller = calculate_bsa_mosteller(weight, height_cm)
        bsa_dubois = calculate_bsa_dubois(weight, height_cm)
        
        # Classify BMI
        if bmi < 16:
            bmi_category = "G·∫ßy ƒë·ªô III (Severe thinness)"
            bmi_color = "#dc3545"
            bmi_icon = "üö®"
        elif bmi < 17:
            bmi_category = "G·∫ßy ƒë·ªô II (Moderate thinness)"
            bmi_color = "#fd7e14"
            bmi_icon = "‚ö†Ô∏è"
        elif bmi < 18.5:
            bmi_category = "G·∫ßy ƒë·ªô I (Mild thinness)"
            bmi_color = "#ffc107"
            bmi_icon = "‚ö†Ô∏è"
        elif bmi < 25:
            bmi_category = "B√¨nh th∆∞·ªùng (Normal)"
            bmi_color = "#28a745"
            bmi_icon = "‚úÖ"
        elif bmi < 30:
            bmi_category = "Th·ª´a c√¢n (Overweight)"
            bmi_color = "#ffc107"
            bmi_icon = "‚ö†Ô∏è"
        elif bmi < 35:
            bmi_category = "B√©o ph√¨ ƒë·ªô I (Obese class I)"
            bmi_color = "#fd7e14"
            bmi_icon = "‚ö†Ô∏è"
        elif bmi < 40:
            bmi_category = "B√©o ph√¨ ƒë·ªô II (Obese class II)"
            bmi_color = "#dc3545"
            bmi_icon = "üö®"
        else:
            bmi_category = "B√©o ph√¨ ƒë·ªô III (Obese class III)"
            bmi_color = "#dc3545"
            bmi_icon = "üö®"
        
        # Display results
        st.markdown("## üìä K·∫øt qu·∫£")
        
        # BMI Result
        st.markdown(f"""
        <div style='background: linear-gradient(135deg, {bmi_color}22 0%, {bmi_color}44 100%); 
                    padding: 30px; border-radius: 15px; border-left: 5px solid {bmi_color}; margin: 20px 0;'>
            <h2 style='color: {bmi_color}; margin: 0; text-align: center;'>
                {bmi_icon} BMI = {bmi:.1f} kg/m¬≤
            </h2>
            <p style='text-align: center; font-size: 1.2em; margin-top: 10px;'>
                {bmi_category}
            </p>
        </div>
        """, unsafe_allow_html=True)
        
        # All metrics
        st.markdown("### üìè T·∫•t c·∫£ ch·ªâ s·ªë:")
        
        col1, col2, col3 = st.columns(3)
        
        with col1:
            st.metric(
                "BMI",
                f"{bmi:.1f} kg/m¬≤",
                help="Body Mass Index"
            )
        
        with col2:
            st.metric(
                "IBW",
                f"{ibw:.1f} kg",
                delta=f"{weight - ibw:+.1f} kg so v·ªõi actual",
                help="Ideal Body Weight (Devine)"
            )
        
        with col3:
            st.metric(
                "BSA",
                f"{bsa_mosteller:.2f} m¬≤",
                help="Body Surface Area (Mosteller)"
            )
        
        # ABW if obese
        if weight > ibw * 1.2:  # >20% over IBW
            st.markdown("---")
            st.info(f"""
            **Adjusted Body Weight (ABW):** {abw:.1f} kg
            
            - C√¢n n·∫∑ng th·ª±c t·∫ø **{weight:.1f} kg** cao h∆°n IBW **{ibw:.1f} kg**
            - ABW = {ibw:.1f} + 0.4 √ó ({weight:.1f} - {ibw:.1f}) = **{abw:.1f} kg**
            - D√πng ABW cho: CrCl (b√©o ph√¨), m·ªôt s·ªë thu·ªëc
            """)
        
        # Detailed breakdown
        st.markdown("---")
        st.markdown("### üìã Chi ti·∫øt t√≠nh to√°n:")
        
        height_m = height_cm / 100
        
        st.markdown(f"""
        **1. BMI (Body Mass Index):**
        ```
        BMI = C√¢n n·∫∑ng / Chi·ªÅu cao¬≤
        BMI = {weight} / ({height_m:.2f})¬≤
        BMI = {weight} / {height_m**2:.2f}
        BMI = {bmi:.1f} kg/m¬≤
        ```
        
        **2. IBW (Ideal Body Weight - Devine):**
        ```
        {"Nam: IBW = 50 + 0.91 √ó (chi·ªÅu cao - 152.4)" if gender == "male" else "N·ªØ: IBW = 45.5 + 0.91 √ó (chi·ªÅu cao - 152.4)"}
        IBW = {"50" if gender == "male" else "45.5"} + 0.91 √ó ({height_cm} - 152.4)
        IBW = {"50" if gender == "male" else "45.5"} + 0.91 √ó {height_cm - 152.4:.1f}
        IBW = {"50" if gender == "male" else "45.5"} + {0.91 * (height_cm - 152.4):.1f}
        IBW = {ibw:.1f} kg
        ```
        
        **3. BSA (Body Surface Area - Mosteller):**
        ```
        BSA = ‚àö[(C√¢n n·∫∑ng √ó Chi·ªÅu cao) / 3600]
        BSA = ‚àö[({weight} √ó {height_cm}) / 3600]
        BSA = ‚àö[{weight * height_cm} / 3600]
        BSA = ‚àö{(weight * height_cm) / 3600:.2f}
        BSA = {bsa_mosteller:.2f} m¬≤
        ```
        
        **BSA (DuBois - tham kh·∫£o):** {bsa_dubois:.2f} m¬≤
        """)
        
        # BMI interpretation
        with st.expander("üìä B·∫£ng ph√¢n lo·∫°i BMI (WHO)"):
            st.markdown("""
            | BMI (kg/m¬≤) | Ph√¢n lo·∫°i | Nguy c∆° s·ª©c kh·ªèe |
            |:------------|:----------|:-----------------|
            | < 16.0 | G·∫ßy ƒë·ªô III | Cao - suy dinh d∆∞·ª°ng n·∫∑ng |
            | 16.0 - 16.9 | G·∫ßy ƒë·ªô II | Trung b√¨nh-cao |
            | 17.0 - 18.4 | G·∫ßy ƒë·ªô I | Th·∫•p-trung b√¨nh |
            | **18.5 - 24.9** | **B√¨nh th∆∞·ªùng** | **Th·∫•p** ‚úÖ |
            | 25.0 - 29.9 | Th·ª´a c√¢n | TƒÉng nh·∫π |
            | 30.0 - 34.9 | B√©o ph√¨ ƒë·ªô I | Trung b√¨nh |
            | 35.0 - 39.9 | B√©o ph√¨ ƒë·ªô II | Cao |
            | ‚â• 40.0 | B√©o ph√¨ ƒë·ªô III | R·∫•t cao |
            
            **L∆∞u √Ω cho ng∆∞·ªùi ch√¢u √Å:**
            - Nguy c∆° b·ªánh chuy·ªÉn h√≥a tƒÉng ·ªü BMI th·∫•p h∆°n
            - WHO ch√¢u √Å:
              - Th·ª´a c√¢n: BMI ‚â• 23
              - B√©o ph√¨: BMI ‚â• 25
              - B√©o ph√¨ n·∫∑ng: BMI ‚â• 30
            """)
        
        # Clinical applications
        with st.expander("üíä ·ª®ng d·ª•ng l√¢m s√†ng"):
            st.markdown(f"""
            ### V·ªõi b·ªánh nh√¢n n√†y:
            
            **Th√¥ng tin:**
            - Chi·ªÅu cao: {height_cm} cm
            - C√¢n n·∫∑ng: {weight} kg
            - BMI: {bmi:.1f}
            - IBW: {ibw:.1f} kg
            - BSA: {bsa_mosteller:.2f} m¬≤
            {"- ABW: " + f"{abw:.1f}" + " kg (cho b√©o ph√¨)" if weight > ibw * 1.2 else ""}
            
            ---
            
            ### 1. ƒêi·ªÅu ch·ªânh li·ªÅu thu·ªëc:
            
            **D·ª±a tr√™n c√¢n n·∫∑ng TH·ª∞C T·∫æ ({weight} kg):**
            - Heparin, LMWH
            - Propofol, Succinylcholine
            - H·∫ßu h·∫øt thu·ªëc g√¢y m√™
            
            **D·ª±a tr√™n IBW ({ibw:.1f} kg):**
            - Aminoglycosides (Gentamicin, Amikacin)
            - Theophylline
            - Digoxin
            
            {"**D·ª±a tr√™n ABW (" + f"{abw:.1f}" + " kg) - cho b√©o ph√¨:**" if weight > ibw * 1.2 else ""}
            {f"- Vancomycin, Daptomycin" if weight > ibw * 1.2 else ""}
            {f"- M·ªôt s·ªë thu·ªëc lipophilic" if weight > ibw * 1.2 else ""}
            
            **D·ª±a tr√™n BSA ({bsa_mosteller:.2f} m¬≤):**
            - H√≥a tr·ªã (Doxorubicin, Cisplatin...)
            - eGFR (chu·∫©n h√≥a theo 1.73 m¬≤)
            - Cardiac Index
            
            ---
            
            ### 2. ƒê√°nh gi√° dinh d∆∞·ª°ng:
            
            **BMI {bmi:.1f}:** {bmi_category}
            
            {"**‚ö†Ô∏è G·∫ßy - C·∫ßn ƒë√°nh gi√° dinh d∆∞·ª°ng:**" if bmi < 18.5 else ""}
            {f"- Nguy c∆° suy dinh d∆∞·ª°ng" if bmi < 18.5 else ""}
            {f"- TƒÉng c∆∞·ªùng dinh d∆∞·ª°ng" if bmi < 18.5 else ""}
            {f"- ƒê√°nh gi√° albumin, prealbumin" if bmi < 18.5 else ""}
            
            {"**‚úÖ B√¨nh th∆∞·ªùng - Duy tr√¨:**" if 18.5 <= bmi < 25 else ""}
            {f"- Ch·∫ø ƒë·ªô ƒÉn c√¢n b·∫±ng" if 18.5 <= bmi < 25 else ""}
            {f"- V·∫≠n ƒë·ªông ƒë·ªÅu ƒë·∫∑n" if 18.5 <= bmi < 25 else ""}
            
            {"**‚ö†Ô∏è Th·ª´a c√¢n/B√©o ph√¨ - C·∫ßn can thi·ªáp:**" if bmi >= 25 else ""}
            {f"- T∆∞ v·∫•n gi·∫£m c√¢n" if bmi >= 25 else ""}
            {f"- Ch·∫ø ƒë·ªô ƒÉn gi·∫£m calories" if bmi >= 25 else ""}
            {f"- TƒÉng ho·∫°t ƒë·ªông th·ªÉ ch·∫•t" if bmi >= 25 else ""}
            {f"- S√†ng l·ªçc: ƒêTƒê, THA, dyslipidemia" if bmi >= 25 else ""}
            {f"- C√¢n nh·∫Øc thu·ªëc gi·∫£m c√¢n n·∫øu BMI ‚â• 30" if bmi >= 30 else ""}
            {f"- C√¢n nh·∫Øc ph·∫´u thu·∫≠t n·∫øu BMI ‚â• 40" if bmi >= 40 else ""}
            
            ---
            
            ### 3. Nguy c∆° ph·∫´u thu·∫≠t:
            
            {f"**BMI {bmi:.1f} - Nguy c∆° cao:**" if bmi >= 35 else ""}
            {f"- Kh√≥ ƒë·∫∑t n·ªôi kh√≠ qu·∫£n" if bmi >= 35 else ""}
            {f"- Nguy c∆° h√¥ h·∫•p sau m·ªï" if bmi >= 35 else ""}
            {f"- Nhi·ªÖm tr√πng v·∫øt m·ªï" if bmi >= 35 else ""}
            {f"- VTE (huy·∫øt kh·ªëi)" if bmi >= 30 else ""}
            {f"- C·∫ßn d·ª± ph√≤ng VTE" if bmi >= 30 else ""}
            """)
        
        # Weight management
        if bmi < 18.5 or bmi >= 25:
            with st.expander("üéØ M·ª•c ti√™u c√¢n n·∫∑ng"):
                target_bmi_low = 18.5
                target_bmi_high = 24.9
                
                height_m = height_cm / 100
                target_weight_low = target_bmi_low * (height_m ** 2)
                target_weight_high = target_bmi_high * (height_m ** 2)
                
                st.markdown(f"""
                ### M·ª•c ti√™u c√¢n n·∫∑ng l√Ω t∆∞·ªüng:
                
                **ƒê·ªÉ ƒë·∫°t BMI 18.5-24.9 (b√¨nh th∆∞·ªùng):**
                
                - **C√¢n n·∫∑ng m·ª•c ti√™u:** {target_weight_low:.1f} - {target_weight_high:.1f} kg
                - **C√¢n n·∫∑ng hi·ªán t·∫°i:** {weight:.1f} kg
                - **C·∫ßn {"tƒÉng" if weight < target_weight_low else "gi·∫£m"}:** {abs(weight - (target_weight_low if weight < target_weight_low else target_weight_high)):.1f} kg
                
                ---
                
                {"### K·∫ø ho·∫°ch TƒÇNG C√ÇN an to√†n:" if weight < target_weight_low else "### K·∫ø ho·∫°ch GI·∫¢M C√ÇN an to√†n:"}
                
                {'''
                **M·ª•c ti√™u:** TƒÉng 0.5-1 kg/tu·∫ßn
                
                **Dinh d∆∞·ª°ng:**
                - TƒÉng 500-1000 kcal/ng√†y
                - Protein: 1.5-2 g/kg/ng√†y
                - 5-6 b·ªØa nh·ªè/ng√†y
                - B·ªï sung vitamin, kho√°ng ch·∫•t
                
                **V·∫≠n ƒë·ªông:**
                - T·∫≠p kh√°ng l·ª±c (t·∫°)
                - TƒÉng c∆°, kh√¥ng ch·ªâ m·ª°
                
                **Theo d√µi:**
                - C√¢n h√†ng tu·∫ßn
                - ƒê√°nh gi√° albumin, prealbumin
                ''' if weight < target_weight_low else '''
                **M·ª•c ti√™u:** Gi·∫£m 0.5-1 kg/tu·∫ßn (5-10% trong 6 th√°ng)
                
                **Dinh d∆∞·ª°ng:**
                - Gi·∫£m 500-1000 kcal/ng√†y
                - Protein: 1.2-1.5 g/kg IBW/ng√†y
                - TƒÉng rau, tr√°i c√¢y, ch·∫•t x∆°
                - Gi·∫£m ƒë∆∞·ªùng, ch·∫•t b√©o b√£o h√≤a
                
                **V·∫≠n ƒë·ªông:**
                - Aerobic: 150-300 ph√∫t/tu·∫ßn
                - T·∫≠p kh√°ng l·ª±c 2-3 l·∫ßn/tu·∫ßn
                - TƒÉng ho·∫°t ƒë·ªông h√†ng ng√†y
                
                **Theo d√µi:**
                - C√¢n h√†ng tu·∫ßn
                - ƒê∆∞·ªùng huy·∫øt, lipid, huy·∫øt √°p
                '''}
                """)
        
        # References
        with st.expander("üìö T√†i li·ªáu tham kh·∫£o"):
            st.markdown("""
            1. **World Health Organization.** Obesity: preventing and managing the global epidemic. Report of a WHO consultation. 
               *World Health Organ Tech Rep Ser.* 2000;894:i-xii, 1-253.
            
            2. **Devine BJ.** Gentamicin therapy. *Drug Intell Clin Pharm.* 1974;8:650-655.
            
            3. **Mosteller RD.** Simplified calculation of body-surface area. 
               *N Engl J Med.* 1987;317(17):1098.
            
            4. **DuBois D, DuBois EF.** A formula to estimate the approximate surface area if height and weight be known. 
               *Arch Intern Med.* 1916;17:863-871.
            
            5. **WHO Expert Consultation.** Appropriate body-mass index for Asian populations and its implications for policy and intervention strategies. 
               *Lancet.* 2004;363(9403):157-63.
            """)
    
    # Quick reference
    st.markdown("---")
    st.info("""
    üí° **ƒêi·ªÉm quan tr·ªçng:**
    
    **BMI (Body Mass Index):**
    - B√¨nh th∆∞·ªùng: 18.5-24.9 kg/m¬≤ (Ch√¢u √Å: 18.5-22.9)
    - S√†ng l·ªçc b√©o ph√¨, suy dinh d∆∞·ª°ng
    
    **IBW (Ideal Body Weight):**
    - Nam: 50 + 0.91 √ó (cm - 152.4)
    - N·ªØ: 45.5 + 0.91 √ó (cm - 152.4)
    - D√πng cho: Aminoglycosides, Theophylline, Digoxin
    
    **BSA (Body Surface Area):**
    - Mosteller: ‚àö[(kg √ó cm) / 3600]
    - D√πng cho: Li·ªÅu h√≥a tr·ªã, eGFR, Cardiac Index
    
    **ABW (Adjusted Body Weight):**
    - ABW = IBW + 0.4 √ó (Actual - IBW)
    - D√πng cho b√©o ph√¨: Vancomycin, CrCl...
    """)


if __name__ == "__main__":
    render()

