"""
Winter Formula - Expected PCO2 in Metabolic Acidosis
C√¥ng th·ª©c Winter - PCO2 d·ª± ƒëo√°n trong toan chuy·ªÉn h√≥a
"""

import streamlit as st


def calculate_expected_pco2(hco3):
    """
    Calculate expected PCO2 using Winter's Formula
    Expected PCO2 = 1.5 √ó [HCO3] + 8 (¬± 2)
    
    Args:
        hco3: Serum bicarbonate in mmol/L or mEq/L
    
    Returns:
        tuple: (expected_pco2, lower_limit, upper_limit)
    """
    expected_pco2 = 1.5 * hco3 + 8
    lower_limit = expected_pco2 - 2
    upper_limit = expected_pco2 + 2
    
    return expected_pco2, lower_limit, upper_limit


def interpret_compensation(actual_pco2, expected_pco2, lower_limit, upper_limit):
    """
    Interpret respiratory compensation status
    
    Args:
        actual_pco2: Actual measured PCO2
        expected_pco2: Expected PCO2 from Winter's formula
        lower_limit: Lower limit of expected range
        upper_limit: Upper limit of expected range
    
    Returns:
        dict: Interpretation results
    """
    if lower_limit <= actual_pco2 <= upper_limit:
        return {
            "status": "B√π th∆∞·ªùng th√≠ch h·ª£p",
            "color": "üü¢",
            "interpretation": "B√π th∆∞·ªùng h√¥ h·∫•p ƒë·∫ßy ƒë·ªß cho toan chuy·ªÉn h√≥a",
            "clinical": "Ch·ªâ c√≥ r·ªëi lo·∫°n acid-base ƒë∆°n thu·∫ßn (Toan chuy·ªÉn h√≥a)",
            "action": "ƒêi·ªÅu tr·ªã nguy√™n nh√¢n g√¢y toan chuy·ªÉn h√≥a"
        }
    elif actual_pco2 < lower_limit:
        deviation = lower_limit - actual_pco2
        return {
            "status": "B√π th∆∞·ªùng qu√° m·ª©c",
            "color": "üîµ",
            "interpretation": f"PCO2 th·∫•p h∆°n d·ª± ƒëo√°n {deviation:.1f} mmHg",
            "clinical": "R·ªëi lo·∫°n acid-base h·ªón h·ª£p: Toan chuy·ªÉn h√≥a + Ki·ªÅm h√¥ h·∫•p",
            "action": "T√¨m nguy√™n nh√¢n tƒÉng th√¥ng kh√≠ (lo √¢u, ƒëau, nhi·ªÖm tr√πng ph·ªïi, v.v.)"
        }
    else:  # actual_pco2 > upper_limit
        deviation = actual_pco2 - upper_limit
        return {
            "status": "B√π th∆∞·ªùng kh√¥ng ƒë·∫ßy ƒë·ªß",
            "color": "üü†",
            "interpretation": f"PCO2 cao h∆°n d·ª± ƒëo√°n {deviation:.1f} mmHg",
            "clinical": "R·ªëi lo·∫°n acid-base h·ªón h·ª£p: Toan chuy·ªÉn h√≥a + Toan h√¥ h·∫•p",
            "action": "ƒê√°nh gi√° ch·ª©c nƒÉng h√¥ h·∫•p, xem x√©t h·ªó tr·ª£ th√¥ng kh√≠"
        }


def get_metabolic_acidosis_causes(anion_gap):
    """
    Get common causes based on anion gap
    
    Args:
        anion_gap: Calculated anion gap
    
    Returns:
        dict: Causes categorized by anion gap
    """
    if anion_gap > 12:
        return {
            "type": "Toan chuy·ªÉn h√≥a Anion Gap cao",
            "mnemonic": "MUDPILES / GOLDMARK",
            "causes": [
                "**M**ethanol",
                "**U**remia (suy th·∫≠n)",
                "**D**KA (nhi·ªÖm toan do ƒë√°i th√°o ƒë∆∞·ªùng)",
                "**P**araldehyde / **P**ropylene glycol",
                "**I**soniazid / **I**ron",
                "**L**actic acidosis (nhi·ªÖm toan lactic)",
                "**E**thylene glycol",
                "**S**alicylates (aspirin)"
            ]
        }
    else:
        return {
            "type": "Toan chuy·ªÉn h√≥a Anion Gap b√¨nh th∆∞·ªùng",
            "mnemonic": "HARDUPS",
            "causes": [
                "**H**yperalimentation",
                "**A**cetazolamide / **A**ddison's disease",
                "**R**TA (Renal Tubular Acidosis)",
                "**D**iarrhea (ti√™u ch·∫£y)",
                "**U**reteral diversions",
                "**P**ancreatic fistula",
                "**S**aline excess"
            ]
        }


def render():
    """Render the Winter Formula calculator"""
    
    st.title("üß™ Winter Formula")
    st.markdown("""
    ### PCO2 D·ª± ƒêo√°n trong Toan Chuy·ªÉn H√≥a
    
    **Winter's Formula:**
    - D·ª± ƒëo√°n m·ª©c PCO2 b√π th∆∞·ªùng th√≠ch h·ª£p trong toan chuy·ªÉn h√≥a
    - Gi√∫p nh·∫≠n di·ªán r·ªëi lo·∫°n acid-base h·ªón h·ª£p
    - **Expected PCO2 = 1.5 √ó [HCO‚ÇÉ‚Åª] + 8 (¬± 2)**
    
    **√ù nghƒ©a l√¢m s√†ng:**
    - N·∫øu PCO2 th·ª±c t·∫ø = PCO2 d·ª± ƒëo√°n ‚Üí B√π th∆∞·ªùng th√≠ch h·ª£p (r·ªëi lo·∫°n ƒë∆°n thu·∫ßn)
    - N·∫øu PCO2 < PCO2 d·ª± ƒëo√°n ‚Üí B√π th∆∞·ªùng qu√° m·ª©c (th√™m ki·ªÅm h√¥ h·∫•p)
    - N·∫øu PCO2 > PCO2 d·ª± ƒëo√°n ‚Üí B√π th∆∞·ªùng kh√¥ng ƒë·ªß (th√™m toan h√¥ h·∫•p)
    
    **L∆∞u √Ω:** Ch·ªâ √°p d·ª•ng cho toan chuy·ªÉn h√≥a (HCO‚ÇÉ‚Åª < 22 mmol/L)
    """)
    
    st.markdown("---")
    
    # Input section
    st.subheader("üìä Nh·∫≠p Th√¥ng S·ªë Kh√≠ M√°u ƒê·ªông M·∫°ch")
    
    col1, col2 = st.columns(2)
    
    with col1:
        ph = st.number_input(
            "**pH**",
            min_value=6.8,
            max_value=7.8,
            value=7.25,
            step=0.01,
            help="pH m√°u ƒë·ªông m·∫°ch (b√¨nh th∆∞·ªùng: 7.35-7.45)"
        )
        
        hco3 = st.number_input(
            "**HCO‚ÇÉ‚Åª (mmol/L)**",
            min_value=1.0,
            max_value=50.0,
            value=12.0,
            step=0.5,
            help="Bicarbonate (b√¨nh th∆∞·ªùng: 22-28 mmol/L)"
        )
    
    with col2:
        actual_pco2 = st.number_input(
            "**PCO‚ÇÇ th·ª±c t·∫ø (mmHg)**",
            min_value=10.0,
            max_value=100.0,
            value=28.0,
            step=0.5,
            help="PCO2 ƒëo ƒë∆∞·ª£c t·ª´ kh√≠ m√°u (b√¨nh th∆∞·ªùng: 35-45 mmHg)"
        )
        
        # Optional anion gap for additional interpretation
        calculate_ag = st.checkbox("C√≥ gi√° tr·ªã Anion Gap?")
        
        if calculate_ag:
            anion_gap = st.number_input(
                "**Anion Gap (mmol/L)**",
                min_value=0.0,
                max_value=50.0,
                value=20.0,
                step=1.0,
                help="AG = Na - (Cl + HCO3) (b√¨nh th∆∞·ªùng: 8-12)"
            )
        else:
            anion_gap = None
    
    # Check if it's metabolic acidosis
    if hco3 >= 22:
        st.warning("‚ö†Ô∏è **L∆∞u √Ω:** Winter's Formula ch·ªâ √°p d·ª•ng cho toan chuy·ªÉn h√≥a (HCO‚ÇÉ‚Åª < 22 mmol/L)")
    
    if st.button("üî¨ T√≠nh To√°n & Ph√¢n T√≠ch", type="primary", use_container_width=True):
        # Calculate expected PCO2
        expected_pco2, lower_limit, upper_limit = calculate_expected_pco2(hco3)
        
        # Interpret compensation
        result = interpret_compensation(actual_pco2, expected_pco2, lower_limit, upper_limit)
        
        st.markdown("---")
        st.subheader("üìà K·∫øt Qu·∫£ Ph√¢n T√≠ch")
        
        # Display ABG values
        col1, col2, col3 = st.columns(3)
        
        with col1:
            st.metric(
                "pH",
                f"{ph:.2f}",
                delta="Toan" if ph < 7.35 else "Ki·ªÅm" if ph > 7.45 else "B√¨nh th∆∞·ªùng",
                delta_color="inverse"
            )
        
        with col2:
            st.metric(
                "HCO‚ÇÉ‚Åª",
                f"{hco3:.1f} mmol/L",
                delta="Th·∫•p" if hco3 < 22 else "Cao" if hco3 > 28 else "B√¨nh th∆∞·ªùng",
                delta_color="inverse"
            )
        
        with col3:
            st.metric(
                "PCO‚ÇÇ th·ª±c t·∫ø",
                f"{actual_pco2:.1f} mmHg",
                delta="Th·∫•p" if actual_pco2 < 35 else "Cao" if actual_pco2 > 45 else "B√¨nh th∆∞·ªùng",
                delta_color="inverse"
            )
        
        st.markdown("---")
        
        # Winter's Formula Results
        st.subheader("üî¨ Winter's Formula - PCO‚ÇÇ D·ª± ƒêo√°n")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.info(f"""
            **C√¥ng th·ª©c:**  
            PCO‚ÇÇ d·ª± ƒëo√°n = 1.5 √ó [{hco3:.1f}] + 8 (¬± 2)
            
            **K·∫øt qu·∫£:**
            - PCO‚ÇÇ d·ª± ƒëo√°n: **{expected_pco2:.1f} mmHg**
            - Kho·∫£ng ch·∫•p nh·∫≠n: **{lower_limit:.1f} - {upper_limit:.1f} mmHg**
            - PCO‚ÇÇ th·ª±c t·∫ø: **{actual_pco2:.1f} mmHg**
            """)
        
        with col2:
            # Compensation status
            st.success(f"""
            {result['color']} **{result['status']}**
            
            **Gi·∫£i th√≠ch:**  
            {result['interpretation']}
            """)
        
        st.markdown("---")
        
        # Clinical interpretation
        st.subheader("üéØ Ph√¢n T√≠ch L√¢m S√†ng")
        
        if result['color'] == "üü¢":
            st.success(f"""
            ‚úÖ **{result['clinical']}**
            
            B·ªánh nh√¢n c√≥ toan chuy·ªÉn h√≥a ƒë∆°n thu·∫ßn v·ªõi b√π th∆∞·ªùng h√¥ h·∫•p th√≠ch h·ª£p.
            
            **Khuy·∫øn ngh·ªã:**
            - {result['action']}
            - X√°c ƒë·ªãnh v√† ƒëi·ªÅu tr·ªã nguy√™n nh√¢n toan chuy·ªÉn h√≥a
            - Theo d√µi ƒëi·ªán gi·∫£i ƒë·ªì v√† ch·ª©c nƒÉng th·∫≠n
            """)
        else:
            st.warning(f"""
            ‚ö†Ô∏è **{result['clinical']}**
            
            B·ªánh nh√¢n c√≥ r·ªëi lo·∫°n acid-base h·ªón h·ª£p c·∫ßn ƒë√°nh gi√° k·ªπ h∆°n.
            
            **Khuy·∫øn ngh·ªã:**
            - {result['action']}
            - Xem x√©t c√°c nguy√™n nh√¢n g√¢y r·ªëi lo·∫°n acid-base ƒë·ªìng th·ªùi
            - C√¢n nh·∫Øc h·ªôi ch·∫©n chuy√™n khoa
            """)
        
        # Causes based on anion gap
        if anion_gap is not None:
            st.markdown("---")
            st.subheader("üîç Nguy√™n Nh√¢n Toan Chuy·ªÉn H√≥a")
            
            causes_info = get_metabolic_acidosis_causes(anion_gap)
            
            st.info(f"""
            **Anion Gap = {anion_gap:.1f} mmol/L**
            
            **Lo·∫°i:** {causes_info['type']}
            
            **G·ª£i nh·ªõ ({causes_info['mnemonic']}):**
            """)
            
            for cause in causes_info['causes']:
                st.markdown(f"- {cause}")
    
    # Educational content
    st.markdown("---")
    st.subheader("üìö Ki·∫øn Th·ª©c B·ªï Sung")
    
    with st.expander("üéØ C∆° Ch·∫ø B√π Th∆∞·ªùng"):
        st.markdown("""
        ### B√π th∆∞·ªùng h√¥ h·∫•p trong toan chuy·ªÉn h√≥a:
        
        **1. C∆° ch·∫ø:**
        - HCO‚ÇÉ‚Åª gi·∫£m ‚Üí pH gi·∫£m
        - K√≠ch th√≠ch trung t√¢m h√¥ h·∫•p
        - TƒÉng th√¥ng kh√≠ ‚Üí Th·∫£i CO‚ÇÇ
        - PCO‚ÇÇ gi·∫£m ‚Üí pH tƒÉng tr·ªü l·∫°i
        
        **2. Th·ªùi gian:**
        - B·∫Øt ƒë·∫ßu: Ngay l·∫≠p t·ª©c (ph√∫t)
        - T·ªëi ƒëa: 12-24 gi·ªù
        - Ho√†n t·∫•t: 2-3 ng√†y
        
        **3. Gi·ªõi h·∫°n:**
        - PCO‚ÇÇ th·∫•p nh·∫•t c√≥ th·ªÉ: ~10-12 mmHg
        - Kh√¥ng bao gi·ªù b√π th∆∞·ªùng ho√†n to√†n (pH kh√¥ng v·ªÅ 7.40)
        - N·∫øu pH b√¨nh th∆∞·ªùng ‚Üí C√≥ th√™m r·ªëi lo·∫°n ki·ªÅm
        
        **4. √ù nghƒ©a Winter's Formula:**
        - D·ª± ƒëo√°n PCO‚ÇÇ "m·ª•c ti√™u" khi b√π th∆∞·ªùng ƒë·∫ßy ƒë·ªß
        - Ph√°t hi·ªán r·ªëi lo·∫°n acid-base h·ªón h·ª£p
        - H∆∞·ªõng d·∫´n ƒëi·ªÅu tr·ªã th√≠ch h·ª£p
        """)
    
    with st.expander("üìä C√°ch ƒê√°nh Gi√° Kh√≠ M√°u ƒê·ªông M·∫°ch"):
        st.markdown("""
        ### Ti·∫øp c·∫≠n c√≥ h·ªá th·ªëng:
        
        **B∆∞·ªõc 1: ƒê√°nh gi√° pH**
        - pH < 7.35 ‚Üí Toan
        - pH > 7.45 ‚Üí Ki·ªÅm
        - pH 7.35-7.45 ‚Üí B√¨nh th∆∞·ªùng (ho·∫∑c b√π th∆∞·ªùng ho√†n to√†n)
        
        **B∆∞·ªõc 2: X√°c ƒë·ªãnh r·ªëi lo·∫°n ch√≠nh**
        - Toan + HCO‚ÇÉ‚Åª th·∫•p ‚Üí Toan chuy·ªÉn h√≥a
        - Toan + PCO‚ÇÇ cao ‚Üí Toan h√¥ h·∫•p
        - Ki·ªÅm + HCO‚ÇÉ‚Åª cao ‚Üí Ki·ªÅm chuy·ªÉn h√≥a
        - Ki·ªÅm + PCO‚ÇÇ th·∫•p ‚Üí Ki·ªÅm h√¥ h·∫•p
        
        **B∆∞·ªõc 3: ƒê√°nh gi√° b√π th∆∞·ªùng**
        - Toan chuy·ªÉn h√≥a ‚Üí D√πng Winter's Formula
        - Ki·ªÅm chuy·ªÉn h√≥a ‚Üí PCO‚ÇÇ tƒÉng 0.7 mmHg/1 mmol/L HCO‚ÇÉ‚Åª
        - Toan h√¥ h·∫•p:
          + C·∫•p: HCO‚ÇÉ‚Åª tƒÉng 1 mmol/L m·ªói 10 mmHg PCO‚ÇÇ
          + M·∫°n: HCO‚ÇÉ‚Åª tƒÉng 4 mmol/L m·ªói 10 mmHg PCO‚ÇÇ
        - Ki·ªÅm h√¥ h·∫•p:
          + C·∫•p: HCO‚ÇÉ‚Åª gi·∫£m 2 mmol/L m·ªói 10 mmHg PCO‚ÇÇ
          + M·∫°n: HCO‚ÇÉ‚Åª gi·∫£m 5 mmol/L m·ªói 10 mmHg PCO‚ÇÇ
        
        **B∆∞·ªõc 4: T√≠nh Anion Gap**
        - AG = Na‚Å∫ - (Cl‚Åª + HCO‚ÇÉ‚Åª)
        - B√¨nh th∆∞·ªùng: 8-12 mmol/L
        - Ph√¢n lo·∫°i nguy√™n nh√¢n toan chuy·ªÉn h√≥a
        
        **B∆∞·ªõc 5: Delta Ratio (n·∫øu AG cao)**
        - Œî Ratio = (AG - 12) / (24 - HCO‚ÇÉ‚Åª)
        - Ratio 1-2: Toan chuy·ªÉn h√≥a AG cao ƒë∆°n thu·∫ßn
        - Ratio < 1: Th√™m toan AG b√¨nh th∆∞·ªùng
        - Ratio > 2: Th√™m ki·ªÅm chuy·ªÉn h√≥a
        """)
    
    with st.expander("‚ö†Ô∏è R·ªëi Lo·∫°n Acid-Base H·ªón H·ª£p"):
        st.markdown("""
        ### C√°c t√¨nh hu·ªëng th∆∞·ªùng g·∫∑p:
        
        **1. Toan chuy·ªÉn h√≥a + Toan h√¥ h·∫•p:**
        - Ng·ª´ng tim, s·ªëc n·∫∑ng
        - PCO‚ÇÇ cao h∆°n d·ª± ƒëo√°n theo Winter
        - pH r·∫•t th·∫•p, ti√™n l∆∞·ª£ng x·∫•u
        
        **2. Toan chuy·ªÉn h√≥a + Ki·ªÅm h√¥ h·∫•p:**
        - Nhi·ªÖm tr√πng huy·∫øt + suy gan
        - Ng·ªô ƒë·ªôc salicylate
        - PCO‚ÇÇ th·∫•p h∆°n d·ª± ƒëo√°n theo Winter
        - pH c√≥ th·ªÉ g·∫ßn b√¨nh th∆∞·ªùng
        
        **3. Toan chuy·ªÉn h√≥a + Ki·ªÅm chuy·ªÉn h√≥a:**
        - Suy th·∫≠n + n√¥n nhi·ªÅu
        - DKA + thu·ªëc l·ª£i ti·ªÉu
        - AG cao nh∆∞ng HCO‚ÇÉ‚Åª g·∫ßn b√¨nh th∆∞·ªùng
        - D√πng Delta Ratio ƒë·ªÉ ph√°t hi·ªán
        
        **4. Triple disorder:**
        - DKA + n√¥n + ng·ªô ƒë·ªôc aspirin
        - Suy tim + suy gan + suy th·∫≠n
        - R·∫•t ph·ª©c t·∫°p, c·∫ßn h·ªôi ch·∫©n
        """)
    
    with st.expander("üî¢ C√¥ng Th·ª©c Kh√°c Li√™n Quan"):
        st.markdown("""
        ### C√°c c√¥ng th·ª©c b√π th∆∞·ªùng kh√°c:
        
        **1. Ki·ªÅm chuy·ªÉn h√≥a:**
        ```
        Expected PCO‚ÇÇ = 0.7 √ó (HCO‚ÇÉ‚Åª - 24) + 40
        Ho·∫∑c: PCO‚ÇÇ tƒÉng 0.7 mmHg/1 mmol/L HCO‚ÇÉ‚Åª
        ```
        
        **2. Toan h√¥ h·∫•p:**
        ```
        C·∫•p: HCO‚ÇÉ‚Åª tƒÉng 1 mmol/L m·ªói 10 mmHg PCO‚ÇÇ
        M·∫°n: HCO‚ÇÉ‚Åª tƒÉng 4 mmol/L m·ªói 10 mmHg PCO‚ÇÇ
        ```
        
        **3. Ki·ªÅm h√¥ h·∫•p:**
        ```
        C·∫•p: HCO‚ÇÉ‚Åª gi·∫£m 2 mmol/L m·ªói 10 mmHg PCO‚ÇÇ
        M·∫°n: HCO‚ÇÉ‚Åª gi·∫£m 5 mmol/L m·ªói 10 mmHg PCO‚ÇÇ
        ```
        
        **4. Anion Gap ƒëi·ªÅu ch·ªânh theo Albumin:**
        ```
        AG corrected = AG measured + 2.5 √ó (4.0 - Albumin)
        ```
        
        **5. Delta Ratio:**
        ```
        Œî Ratio = (AG - 12) / (24 - HCO‚ÇÉ‚Åª)
        ```
        """)
    
    # References
    st.markdown("---")
    st.caption("""
    **T√†i li·ªáu tham kh·∫£o:**
    - Winter SD. A simple formula for the base excess of blood. J Appl Physiol. 1971
    - Albert MS, et al. Quantitative displacement of acid-base equilibrium. Ann Intern Med. 1967
    - Berend K, et al. Physiological approach to assessment of acid-base disturbances. NEJM. 2014
    - Rose BD, Post TW. Clinical Physiology of Acid-Base and Electrolyte Disorders. 5th ed. 2001
    """)


if __name__ == "__main__":
    render()

