"""
Centor Score (Modified Centor / McIsaac Score)
ƒê√°nh gi√° vi√™m h·ªçng do li√™n c·∫ßu khu·∫©n nh√≥m A (Streptococcus pyogenes)
"""

import streamlit as st


def calculate_centor(fever, exudate, nodes, no_cough, age):
    """
    Calculate Modified Centor (McIsaac) Score
    
    Args:
        fever: Fever > 38¬∞C (0-1)
        exudate: Tonsillar exudate (0-1)
        nodes: Tender anterior cervical lymphadenopathy (0-1)
        no_cough: Absence of cough (0-1)
        age: Age in years for age modifier
    
    Returns:
        int: Total Centor score (-1 to 5)
    """
    score = fever + exudate + nodes + no_cough
    
    # Age modifier (McIsaac modification)
    if age < 15:
        score += 1
    elif age >= 45:
        score -= 1
    
    return score


def interpret_centor(score):
    """
    Interpret Centor score
    
    Args:
        score: Centor score (-1 to 5)
    
    Returns:
        dict: Interpretation results
    """
    if score <= 0:
        return {
            "risk": "R·∫•t th·∫•p",
            "color": "üü¢",
            "probability": "< 2.5%",
            "recommendation": "KH√îNG c·∫ßn test ho·∫∑c kh√°ng sinh",
            "action": "ƒêi·ªÅu tr·ªã tri·ªáu ch·ª©ng (gi·∫£m ƒëau, h·∫° s·ªët). Theo d√µi t·∫°i nh√†.",
            "testing": "Kh√¥ng test",
            "antibiotics": "Kh√¥ng kh√°ng sinh",
            "level": "very_low"
        }
    elif score == 1:
        return {
            "risk": "Th·∫•p",
            "color": "üü°",
            "probability": "5-10%",
            "recommendation": "KH√îNG c·∫ßn test ho·∫∑c kh√°ng sinh (tr·ª´ d·ªãch t·ªÖ ƒë·∫∑c bi·ªát)",
            "action": "ƒêi·ªÅu tr·ªã tri·ªáu ch·ª©ng. T√°i kh√°m n·∫øu kh√¥ng ƒë·ª° sau 3-5 ng√†y.",
            "testing": "Kh√¥ng test th∆∞·ªùng quy",
            "antibiotics": "Kh√¥ng kh√°ng sinh",
            "level": "low"
        }
    elif score == 2:
        return {
            "risk": "Trung b√¨nh",
            "color": "üü†",
            "probability": "10-17%",
            "recommendation": "XEM X√âT test (Rapid Antigen ho·∫∑c throat culture)",
            "action": "Test n·∫øu c√≥ s·∫µn. ƒêi·ªÅu tr·ªã d·ª±a tr√™n k·∫øt qu·∫£ test. N·∫øu kh√¥ng test ‚Üí Tri·ªáu ch·ª©ng + theo d√µi.",
            "testing": "Rapid Antigen Test (RADT) ho·∫∑c throat culture",
            "antibiotics": "Kh√°ng sinh CH·ªà n·∫øu test d∆∞∆°ng t√≠nh",
            "level": "moderate"
        }
    elif score == 3:
        return {
            "risk": "Trung b√¨nh-cao",
            "color": "üü†",
            "probability": "28-35%",
            "recommendation": "N√äN test (Rapid Antigen ho·∫∑c throat culture)",
            "action": "Test ƒë·ªÉ x√°c ƒë·ªãnh. Kh√°ng sinh n·∫øu test (+). N·∫øu kh√¥ng test ‚Üí Xem x√©t ƒëi·ªÅu tr·ªã kinh nghi·ªám.",
            "testing": "Khuy·∫øn c√°o test (RADT ho·∫∑c culture)",
            "antibiotics": "Kh√°ng sinh n·∫øu test (+) ho·∫∑c xem x√©t empiric",
            "level": "moderate_high"
        }
    else:  # score >= 4
        return {
            "risk": "Cao",
            "color": "üî¥",
            "probability": "51-53%",
            "recommendation": "Test ho·∫∑c ƒëi·ªÅu tr·ªã kinh nghi·ªám",
            "action": "Test nhanh (RADT). N·∫øu (+) ‚Üí Kh√°ng sinh. N·∫øu (-) ‚Üí Throat culture x√°c nh·∫≠n. HO·∫∂C ƒëi·ªÅu tr·ªã kinh nghi·ªám n·∫øu kh√¥ng test ƒë∆∞·ª£c.",
            "testing": "RADT + culture n·∫øu (-)",
            "antibiotics": "Xem x√©t ƒëi·ªÅu tr·ªã kinh nghi·ªám (ƒë·∫∑c bi·ªát n·∫øu kh√¥ng test)",
            "level": "high"
        }


def get_antibiotic_regimen():
    """Get antibiotic treatment regimens for strep pharyngitis"""
    return {
        "first_line": {
            "name": "Penicillin / Amoxicillin",
            "regimens": [
                "**Penicillin V:** 500 mg PO 2-3 l·∫ßn/ng√†y √ó 10 ng√†y",
                "**Amoxicillin:** 500 mg PO 2 l·∫ßn/ng√†y √ó 10 ng√†y (ho·∫∑c 1000 mg 1 l·∫ßn/ng√†y)",
                "**Benzathine Penicillin G:** 1.2 tri·ªáu units IM √ó 1 l·∫ßn (tu√¢n th·ªß 100%, ti·ªán cho ng∆∞·ªùi kh√≥ u·ªëng thu·ªëc)"
            ],
            "notes": "L·ª±a ch·ªçn ƒë·∫ßu tay. Chi ph√≠ th·∫•p, hi·ªáu qu·∫£ cao, ph·ªï h·∫πp (kh√¥ng l√†m r·ªëi lo·∫°n vi sinh v·∫≠t)."
        },
        "allergy": {
            "name": "D·ªã ·ª©ng Penicillin (kh√¥ng n·∫∑ng)",
            "regimens": [
                "**Cephalexin:** 500 mg PO 2 l·∫ßn/ng√†y √ó 10 ng√†y",
                "**Cefadroxil:** 1 g PO 1 l·∫ßn/ng√†y √ó 10 ng√†y",
                "**Azithromycin:** 500 mg ng√†y 1, sau ƒë√≥ 250 mg ng√†y 2-5 (5 ng√†y)",
                "**Clarithromycin:** 250 mg PO 2 l·∫ßn/ng√†y √ó 10 ng√†y"
            ],
            "notes": "Cephalosporin: < 1% cross-reactivity v·ªõi penicillin. Macrolides: Kh√°ng thu·ªëc tƒÉng (10-15%), n√™n d√πng n·∫øu th·∫≠t s·ª± d·ªã ·ª©ng penicillin."
        },
        "severe_allergy": {
            "name": "D·ªã ·ª©ng Penicillin n·∫∑ng (anaphylaxis)",
            "regimens": [
                "**Azithromycin:** 500 mg ng√†y 1, sau ƒë√≥ 250 mg ng√†y 2-5",
                "**Clarithromycin:** 250 mg PO 2 l·∫ßn/ng√†y √ó 10 ng√†y",
                "**Clindamycin:** 300 mg PO 3 l·∫ßn/ng√†y √ó 10 ng√†y"
            ],
            "notes": "TR√ÅNH cephalosporin. Macrolides/Clindamycin l√† l·ª±a ch·ªçn."
        }
    }


def render():
    """Render the Centor Score calculator"""
    
    st.title("ü¶† Centor Score (Modified)")
    st.markdown("""
    ### ƒê√°nh Gi√° Vi√™m H·ªçng Do Li√™n C·∫ßu Khu·∫©n
    
    **Centor Score / Modified Centor (McIsaac Score):**
    - C√¥ng c·ª• l√¢m s√†ng d·ª± ƒëo√°n vi√™m h·ªçng do Streptococcus pyogenes (GAS)
    - Gi√∫p quy·∫øt ƒë·ªãnh: Test? Kh√°ng sinh?
    - Tr√°nh l·∫°m d·ª•ng kh√°ng sinh kh√¥ng c·∫ßn thi·∫øt
    
    **4 ti√™u ch√≠ Centor g·ªëc (1981):**
    1. S·ªët > 38¬∞C
    2. C√≥ m·ªß/b·∫°ch s·∫•u amidan
    3. H·∫°ch c·ªï tr∆∞·ªõc to, ƒëau
    4. Kh√¥ng ho
    
    **Modified Centor (McIsaac, 1998):** + ƒêi·ªÅu ch·ªânh theo tu·ªïi
    - < 15 tu·ªïi: +1 ƒëi·ªÉm
    - 15-44 tu·ªïi: 0 ƒëi·ªÉm
    - ‚â• 45 tu·ªïi: -1 ƒëi·ªÉm
    
    **ƒêi·ªÉm: -1 ƒë·∫øn 5**
    
    **L∆∞u √Ω:**
    - Centor gi√∫p GI·∫¢M test/kh√°ng sinh kh√¥ng c·∫ßn thi·∫øt
    - Kh√¥ng thay th·∫ø clinical judgment
    - Test (RADT/culture) v·∫´n l√† gold standard
    """)
    
    st.markdown("---")
    
    # Input section
    st.subheader("üìã ƒê√°nh Gi√° L√¢m S√†ng")
    
    # Age
    age = st.number_input(
        "**Tu·ªïi (nƒÉm)**",
        min_value=1,
        max_value=120,
        value=25,
        step=1,
        help="Tu·ªïi c·ªßa b·ªánh nh√¢n"
    )
    
    st.markdown("---")
    
    # Clinical features
    st.markdown("### üå°Ô∏è C√°c Tri·ªáu Ch·ª©ng L√¢m S√†ng")
    
    fever = st.checkbox(
        "**S·ªët > 38¬∞C (100.4¬∞F)**",
        help="Nhi·ªát ƒë·ªô ƒëo ƒë∆∞·ª£c > 38¬∞C ho·∫∑c ti·ªÅn s·ª≠ s·ªët trong 24h qua"
    )
    
    exudate = st.checkbox(
        "**C√≥ m·ªß ho·∫∑c b·∫°ch s·∫•u (exudate) tr√™n amidan**",
        help="M√†ng tr·∫Øng ho·∫∑c m·ªß b√°m tr√™n amidan khi kh√°m h·ªçng"
    )
    
    nodes = st.checkbox(
        "**H·∫°ch c·ªï tr∆∞·ªõc to v√† ƒëau**",
        help="Anterior cervical lymphadenopathy (h·∫°ch c√≥ th·ªÉ s·ªù th·∫•y v√† ƒëau khi ·∫•n)"
    )
    
    no_cough = st.checkbox(
        "**Kh√¥ng ho**",
        help="Kh√¥ng c√≥ tri·ªáu ch·ª©ng ho (GAS √≠t g√¢y ho, virus th∆∞·ªùng c√≥ ho)"
    )
    
    st.markdown("---")
    
    # Calculate button
    if st.button("üìä T√≠nh Centor Score", type="primary", use_container_width=True):
        # Convert checkboxes to int
        fever_score = 1 if fever else 0
        exudate_score = 1 if exudate else 0
        nodes_score = 1 if nodes else 0
        no_cough_score = 1 if no_cough else 0
        
        # Calculate score
        total_score = calculate_centor(fever_score, exudate_score, nodes_score, no_cough_score, age)
        
        # Get interpretation
        result = interpret_centor(total_score)
        
        st.markdown("---")
        st.subheader("üìà K·∫øt Qu·∫£ ƒê√°nh Gi√°")
        
        # Display scores
        col1, col2, col3 = st.columns(3)
        
        with col1:
            st.metric(
                "Centor Score",
                total_score,
                help="ƒêi·ªÉm t·ª´ -1 ƒë·∫øn 5"
            )
        
        with col2:
            st.metric(
                "X√°c su·∫•t GAS",
                result['probability'],
                help="Kh·∫£ nƒÉng vi√™m h·ªçng do Streptococcus pyogenes"
            )
        
        with col3:
            if result['level'] in ["very_low", "low"]:
                st.success(f"{result['color']} {result['risk']}")
            elif result['level'] in ["moderate", "moderate_high"]:
                st.warning(f"{result['color']} {result['risk']}")
            else:
                st.error(f"{result['color']} {result['risk']}")
        
        st.markdown("---")
        
        # Score breakdown
        st.subheader("üìä Chi Ti·∫øt ƒêi·ªÉm S·ªë")
        
        components = [
            ("üå°Ô∏è S·ªët > 38¬∞C", fever_score),
            ("üî¥ M·ªß/b·∫°ch s·∫•u amidan", exudate_score),
            ("üîµ H·∫°ch c·ªï tr∆∞·ªõc to, ƒëau", nodes_score),
            ("‚ùå Kh√¥ng ho", no_cough_score),
        ]
        
        # Age modifier
        if age < 15:
            age_modifier = 1
            age_text = f"üë∂ Tu·ªïi < 15 ({age} tu·ªïi): +1 ƒëi·ªÉm"
        elif age >= 45:
            age_modifier = -1
            age_text = f"üë¥ Tu·ªïi ‚â• 45 ({age} tu·ªïi): -1 ƒëi·ªÉm"
        else:
            age_modifier = 0
            age_text = f"üßë Tu·ªïi 15-44 ({age} tu·ªïi): 0 ƒëi·ªÉm"
        
        for label, score in components:
            col1, col2 = st.columns([3, 1])
            with col1:
                st.write(label)
            with col2:
                if score == 1:
                    st.write("‚úÖ +1")
                else:
                    st.write("‚¨ú 0")
        
        st.markdown(age_text)
        
        st.markdown("---")
        
        # Recommendations
        st.subheader("üéØ Khuy·∫øn Ngh·ªã X·ª≠ Tr√≠")
        
        if result['level'] in ["very_low", "low"]:
            st.success(f"""
            ### ‚úÖ Nguy C∆° {result['risk']} - {result['probability']}
            
            **X√°c su·∫•t vi√™m h·ªçng do GAS: {result['probability']}**
            
            **Khuy·∫øn ngh·ªã:** {result['recommendation']}
            
            **X·ª≠ tr√≠:** {result['action']}
            
            ---
            
            **üíä ƒêi·ªÅu tr·ªã tri·ªáu ch·ª©ng:**
            - Gi·∫£m ƒëau/h·∫° s·ªët: Paracetamol ho·∫∑c Ibuprofen
            - S√∫c mi·ªáng n∆∞·ªõc mu·ªëi ·∫•m
            - U·ªëng nhi·ªÅu n∆∞·ªõc
            - Ngh·ªâ ng∆°i
            
            **üìù T∆∞ v·∫•n:**
            - Vi√™m h·ªçng th∆∞·ªùng do virus ‚Üí T·ª± kh·ªèi 3-7 ng√†y
            - T√°i kh√°m n·∫øu: S·ªët cao k√©o d√†i, kh√≥ nu·ªët n·∫∑ng, kh√≥ th·ªü
            """)
            
        elif result['level'] in ["moderate", "moderate_high"]:
            st.warning(f"""
            ### ‚ö†Ô∏è Nguy C∆° {result['risk']} - {result['probability']}
            
            **X√°c su·∫•t vi√™m h·ªçng do GAS: {result['probability']}**
            
            **Khuy·∫øn ngh·ªã:** {result['recommendation']}
            
            **Test:** {result['testing']}
            
            **Kh√°ng sinh:** {result['antibiotics']}
            
            **X·ª≠ tr√≠:** {result['action']}
            """)
            
            st.info("""
            ### üß™ Ph∆∞∆°ng Ph√°p Test:
            
            **1. Rapid Antigen Detection Test (RADT):**
            - K·∫øt qu·∫£: 5-10 ph√∫t
            - ƒê·ªô nh·∫°y: 70-90%
            - ƒê·ªô ƒë·∫∑c hi·ªáu: 95-99%
            - N·∫øu (+) ‚Üí ƒêi·ªÅu tr·ªã
            - N·∫øu (-) ‚Üí Xem x√©t throat culture ·ªü tr·∫ª em
            
            **2. Throat Culture:**
            - Gold standard
            - K·∫øt qu·∫£: 24-48 gi·ªù
            - ƒê·ªô nh·∫°y: 90-95%
            - Ch·ªâ ƒë·ªãnh: RADT (-) ·ªü tr·∫ª em/thanh thi·∫øu ni√™n
            
            **ƒêi·ªÅu tr·ªã tri·ªáu ch·ª©ng trong khi ch·ªù k·∫øt qu·∫£ test**
            """)
            
        else:  # high risk
            st.error(f"""
            ### üö® Nguy C∆° {result['risk']} - {result['probability']}
            
            **X√°c su·∫•t vi√™m h·ªçng do GAS: {result['probability']}**
            
            **Khuy·∫øn ngh·ªã:** {result['recommendation']}
            
            **Test:** {result['testing']}
            
            **Kh√°ng sinh:** {result['antibiotics']}
            
            **X·ª≠ tr√≠:** {result['action']}
            """)
            
            st.warning("""
            ### ‚ö†Ô∏è L∆∞u √ù Quan Tr·ªçng:
            
            **V·ªõi ƒëi·ªÉm ‚â• 4, x√°c su·∫•t GAS > 50%:**
            - Test nhanh (RADT) n·∫øu c√≥ s·∫µn
            - N·∫øu kh√¥ng test ‚Üí Xem x√©t ƒëi·ªÅu tr·ªã kinh nghi·ªám
            - ƒê·∫∑c bi·ªát n·∫øu:
              + Ti·ªÅn s·ª≠ s·ªët th·∫•p kh·ªõp
              + Ti·∫øp x√∫c v·ªõi GAS pharyngitis
              + D·ªãch t·ªÖ GAS cao trong c·ªông ƒë·ªìng
            """)
        
        # Antibiotic regimens if indicated
        if result['level'] in ["moderate_high", "high"] or (result['level'] == "moderate" and total_score >= 2):
            st.markdown("---")
            st.subheader("üíä Ph√°c ƒê·ªì Kh√°ng Sinh (N·∫øu Ch·ªâ ƒê·ªãnh)")
            
            regimens = get_antibiotic_regimen()
            
            # First-line
            with st.expander("‚úÖ L·ª±a Ch·ªçn ƒê·∫ßu Tay (Kh√¥ng D·ªã ·ª®ng)", expanded=True):
                st.markdown(f"### {regimens['first_line']['name']}")
                for reg in regimens['first_line']['regimens']:
                    st.markdown(f"- {reg}")
                st.info(f"**L∆∞u √Ω:** {regimens['first_line']['notes']}")
            
            # Allergy
            with st.expander("‚ö†Ô∏è D·ªã ·ª®ng Penicillin (Kh√¥ng N·∫∑ng)"):
                st.markdown(f"### {regimens['allergy']['name']}")
                for reg in regimens['allergy']['regimens']:
                    st.markdown(f"- {reg}")
                st.info(f"**L∆∞u √Ω:** {regimens['allergy']['notes']}")
            
            # Severe allergy
            with st.expander("üö® D·ªã ·ª®ng Penicillin N·∫∑ng"):
                st.markdown(f"### {regimens['severe_allergy']['name']}")
                for reg in regimens['severe_allergy']['regimens']:
                    st.markdown(f"- {reg}")
                st.warning(f"**L∆∞u √Ω:** {regimens['severe_allergy']['notes']}")
            
            st.info("""
            **ƒêi·ªÅu tr·ªã ƒë·ªß 10 ng√†y (tr·ª´ Azithromycin 5 ng√†y):**
            - Gi·∫£m nguy c∆° s·ªët th·∫•p kh·ªõp
            - Gi·∫£m l√¢y lan
            - Gi·∫£m bi·∫øn ch·ª©ng h√≥a m·ªß
            
            **Tri·ªáu ch·ª©ng c·∫£i thi·ªán trong 2-3 ng√†y:**
            - N·∫øu kh√¥ng ƒë·ª° ‚Üí T√°i ƒë√°nh gi√° (c√≥ th·ªÉ kh√¥ng ph·∫£i GAS ho·∫∑c c√≥ bi·∫øn ch·ª©ng)
            """)
    
    # Educational content
    st.markdown("---")
    st.subheader("üìö Th√¥ng Tin B·ªï Sung")
    
    with st.expander("üéØ C√°ch S·ª≠ D·ª•ng Centor Score"):
        st.markdown("""
        ### H∆∞·ªõng d·∫´n √°p d·ª•ng:
        
        **B∆∞·ªõc 1: ƒê√°nh gi√° l√¢m s√†ng**
        - Khai th√°c tri·ªáu ch·ª©ng
        - Kh√°m h·ªçng: Amidan s∆∞ng? C√≥ m·ªß?
        - S·ªù h·∫°ch c·ªï
        - ƒêo nhi·ªát ƒë·ªô
        
        **B∆∞·ªõc 2: T√≠nh ƒëi·ªÉm Centor**
        - √Åp d·ª•ng 4 ti√™u ch√≠ + tu·ªïi
        - ƒêi·ªÉm t·ª´ -1 ƒë·∫øn 5
        
        **B∆∞·ªõc 3: Quy·∫øt ƒë·ªãnh x·ª≠ tr√≠**
        
        **ƒêi·ªÉm ‚â§ 0:**
        - Kh√¥ng test, kh√¥ng kh√°ng sinh
        - ƒêi·ªÅu tr·ªã tri·ªáu ch·ª©ng
        
        **ƒêi·ªÉm 1:**
        - Th∆∞·ªùng kh√¥ng test/kh√°ng sinh
        - Tr·ª´ d·ªãch t·ªÖ ƒë·∫∑c bi·ªát
        
        **ƒêi·ªÉm 2-3:**
        - Test (RADT ho·∫∑c culture)
        - Kh√°ng sinh n·∫øu (+)
        
        **ƒêi·ªÉm ‚â• 4:**
        - Test ho·∫∑c ƒëi·ªÅu tr·ªã kinh nghi·ªám
        - X√°c su·∫•t cao GAS (>50%)
        
        **ƒê·∫∑c bi·ªát l∆∞u √Ω:**
        - Tr·∫ª em < 3 tu·ªïi: GAS hi·∫øm, th∆∞·ªùng virus
        - Ng∆∞·ªùi l·ªõn: Virus th∆∞·ªùng g·∫∑p h∆°n
        - D·ªãch t·ªÖ: M√πa ƒë√¥ng-xu√¢n, tr∆∞·ªùng h·ªçc, qu√¢n ƒë·ªôi
        """)
    
    with st.expander("ü¶† V·ªÅ Streptococcus pyogenes (GAS)"):
        st.markdown("""
        ### Vi√™m h·ªçng do li√™n c·∫ßu khu·∫©n nh√≥m A:
        
        **ƒê·∫∑c ƒëi·ªÉm:**
        - Vi khu·∫©n Gram (+), chu·ªói
        - L√¢y qua ƒë∆∞·ªùng h√¥ h·∫•p (gi·ªçt b·∫Øn)
        - Hay g·∫∑p nh·∫•t ·ªü tr·∫ª 5-15 tu·ªïi
        - √çt g·∫∑p < 3 tu·ªïi v√† ng∆∞·ªùi l·ªõn
        
        **Tri·ªáu ch·ª©ng:**
        - ƒêau h·ªçng ƒë·ªôt ng·ªôt, n·∫∑ng
        - S·ªët cao (th∆∞·ªùng > 38.5¬∞C)
        - Amidan ƒë·ªè, s∆∞ng, c√≥ m·ªß/b·∫°ch s·∫•u
        - H·∫°ch c·ªï to, ƒëau
        - ƒêau ƒë·∫ßu, ƒëau b·ª•ng (ƒë·∫∑c bi·ªát tr·∫ª em)
        - **KH√îNG** ho, s·ªï m≈©i (n·∫øu c√≥ ‚Üí Nghƒ© virus)
        
        **Bi·∫øn ch·ª©ng:**
        
        **1. H√≥a m·ªß (hi·∫øm v·ªõi kh√°ng sinh):**
        - √Åp xe quanh amidan
        - √Åp xe h·∫ßu h·ªçng
        - Vi√™m xoang, vi√™m tai gi·ªØa
        - Vi√™m h·∫°ch c·ªï h√≥a m·ªß
        
        **2. Kh√¥ng h√≥a m·ªß (hi·∫øm n·∫øu ƒëi·ªÅu tr·ªã):**
        - **S·ªët th·∫•p kh·ªõp (Rheumatic Fever):**
          + 2-3 tu·∫ßn sau vi√™m h·ªçng
          + Vi√™m kh·ªõp, vi√™m c∆° tim, b·ªánh van tim
          + Ph√≤ng: Kh√°ng sinh ƒë·ªß li·ªÅu, ƒë·ªß ng√†y
        
        - **Vi√™m c·∫ßu th·∫≠n (PSGN):**
          + 1-2 tu·∫ßn sau vi√™m h·ªçng
          + Ph√π, tƒÉng huy·∫øt √°p, suy th·∫≠n
          + Kh√°ng sinh KH√îNG ph√≤ng ƒë∆∞·ª£c PSGN
        
        - **PANDAS (hi·∫øm):**
          + R·ªëi lo·∫°n th·∫ßn kinh t·ª± mi·ªÖn
          + OCD, tics
        
        **ƒêi·ªÅu tr·ªã gi·∫£m:**
        - Bi·∫øn ch·ª©ng h√≥a m·ªß
        - S·ªët th·∫•p kh·ªõp (99%)
        - L√¢y lan
        - Tri·ªáu ch·ª©ng (gi·∫£m 1-2 ng√†y)
        
        **KH√îNG gi·∫£m:**
        - Vi√™m c·∫ßu th·∫≠n (PSGN)
        """)
    
    with st.expander("‚ö†Ô∏è Gi·ªõi H·∫°n C·ªßa Centor Score"):
        st.markdown("""
        ### Centor kh√¥ng ph·∫£i l√† c√¥ng c·ª• ho√†n h·∫£o:
        
        **H·∫°n ch·∫ø:**
        
        **1. Kh√¥ng √°p d·ª•ng cho:**
        - Tr·∫ª < 3 tu·ªïi (GAS hi·∫øm, th∆∞·ªùng virus)
        - C√≥ bi·ªÉu hi·ªán nghi√™m tr·ªçng (kh√≥ th·ªü, ti·∫øng kh√≤ kh√®)
        - Nghi ng·ªù mononucleosis (EBV)
        - Nghi ng·ªù diphtheria, epiglottitis
        
        **2. Kh√¥ng ph√¢n bi·ªát:**
        - GAS vs virus ch√≠nh x√°c 100%
        - C·∫ßn test ƒë·ªÉ x√°c ƒë·ªãnh ch·∫Øc ch·∫Øn
        
        **3. B·ªã ·∫£nh h∆∞·ªüng b·ªüi:**
        - D·ªãch t·ªÖ ƒë·ªãa ph∆∞∆°ng (prevalence GAS)
        - M√πa (ƒë√¥ng-xu√¢n GAS cao h∆°n)
        - Tu·ªïi (tr·∫ª em cao h∆°n ng∆∞·ªùi l·ªõn)
        
        **4. Kh√¥ng thay th·∫ø:**
        - Clinical judgment
        - Test lab n·∫øu c·∫ßn thi·∫øt
        - ƒê√°nh gi√° bi·∫øn ch·ª©ng
        
        **T√¨nh hu·ªëng ƒë·∫∑c bi·ªát c·∫ßn test/ƒëi·ªÅu tr·ªã:**
        - Ti·ªÅn s·ª≠ s·ªët th·∫•p kh·ªõp
        - Ti·ªÅn s·ª≠ GAS pharyngitis t√°i ph√°t
        - Ti·∫øp x√∫c v·ªõi case GAS
        - D·ªãch outbreak GAS
        - Immunocompromised
        """)
    
    with st.expander("üåç H∆∞·ªõng D·∫´n Qu·ªëc T·∫ø"):
        st.markdown("""
        ### So s√°nh c√°c h∆∞·ªõng d·∫´n:
        
        **IDSA (Infectious Diseases Society of America) 2012:**
        - Test t·∫•t c·∫£ b·ªánh nh√¢n nghi ng·ªù GAS (tr·ª´ r√µ r√†ng virus)
        - RADT (+) ‚Üí ƒêi·ªÅu tr·ªã
        - RADT (-) ·ªü tr·∫ª em ‚Üí Throat culture
        - Kh√¥ng khuy·∫øn c√°o test ·ªü ng∆∞·ªùi l·ªõn n·∫øu RADT (-)
        
        **NICE (UK) 2018:**
        - S·ª≠ d·ª•ng FeverPAIN ho·∫∑c Centor Score
        - ƒêi·ªÉm th·∫•p ‚Üí Kh√¥ng test, kh√¥ng kh√°ng sinh
        - ƒêi·ªÉm cao ‚Üí Test ho·∫∑c empiric antibiotics
        - Delayed prescription option
        
        **Canadian Guidelines:**
        - T∆∞∆°ng t·ª± IDSA
        - Nh·∫•n m·∫°nh Centor ƒë·ªÉ gi·∫£m test kh√¥ng c·∫ßn thi·∫øt
        
        **Choosing Wisely:**
        - KH√îNG test/ƒëi·ªÅu tr·ªã n·∫øu r√µ r√†ng virus
        - Centor ‚â§ 2 ‚Üí Kh√¥ng test th∆∞·ªùng quy
        
        **Xu h∆∞·ªõng:**
        - Gi·∫£m l·∫°m d·ª•ng kh√°ng sinh
        - S·ª≠ d·ª•ng clinical decision rules (Centor)
        - RADT point-of-care
        - Antimicrobial stewardship
        """)
    
    with st.expander("üí° Delayed Prescription Strategy"):
        st.markdown("""
        ### Chi·∫øn l∆∞·ª£c k√™ ƒë∆°n tr√¨ ho√£n:
        
        **Kh√°i ni·ªám:**
        - K√™ ƒë∆°n kh√°ng sinh nh∆∞ng khuy√™n b·ªánh nh√¢n ch·ªâ d√πng n·∫øu:
          + Kh√¥ng ƒë·ª° sau 2-3 ng√†y
          + Tri·ªáu ch·ª©ng n·∫∑ng l√™n
        
        **√Åp d·ª•ng khi:**
        - Centor 2-3 (nguy c∆° trung b√¨nh)
        - B·ªánh nh√¢n/gia ƒë√¨nh mu·ªën "y√™n t√¢m" c√≥ thu·ªëc
        - Kh√≥ t√°i kh√°m (v√πng xa)
        
        **L·ª£i √≠ch:**
        - Gi·∫£m 40% s·ªë ng∆∞·ªùi d√πng kh√°ng sinh
        - B·ªánh nh√¢n h√†i l√≤ng
        - Gi·∫£m kh√°ng thu·ªëc
        
        **H∆∞·ªõng d·∫´n:**
        ```
        "T√¥i k√™ ƒë∆°n kh√°ng sinh cho anh/ch·ªã, nh∆∞ng ch·ªâ d√πng n·∫øu:
        - Sau 2-3 ng√†y kh√¥ng ƒë·ª°
        - Tri·ªáu ch·ª©ng n·∫∑ng l√™n
        - S·ªët cao k√©o d√†i
        
        H·∫ßu h·∫øt vi√™m h·ªçng do virus v√† t·ª± kh·ªèi 3-5 ng√†y.
        H√£y th·ª≠ ƒëi·ªÅu tr·ªã tri·ªáu ch·ª©ng tr∆∞·ªõc.
        
        N·∫øu kh√¥ng c·∫ßn d√πng kh√°ng sinh ‚Üí R·∫•t t·ªët!
        N·∫øu c·∫ßn ‚Üí B·∫Øt ƒë·∫ßu ngay v√† u·ªëng ƒë·ªß 10 ng√†y."
        ```
        
        **ƒêi·ªÅu tr·ªã tri·ªáu ch·ª©ng trong khi ch·ªù:**
        - Paracetamol/Ibuprofen
        - S√∫c mi·ªáng n∆∞·ªõc mu·ªëi ·∫•m
        - U·ªëng nhi·ªÅu n∆∞·ªõc
        - Ngh·ªâ ng∆°i
        - T√°i kh√°m n·∫øu n·∫∑ng l√™n
        """)
    
    # References
    st.markdown("---")
    st.caption("""
    **T√†i li·ªáu tham kh·∫£o:**
    - Centor RM, et al. The diagnosis of strep throat in adults in the emergency room. Med Decis Making. 1981
    - McIsaac WJ, et al. Empirical validation of guidelines for the management of pharyngitis. JAMA. 2004
    - Shulman ST, et al. Clinical Practice Guideline for Strep Pharyngitis. CID. 2012 (IDSA)
    - NICE Guideline: Sore throat (acute). 2018
    """)


if __name__ == "__main__":
    render()

