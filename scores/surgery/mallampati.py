"""
Mallampati Classification Calculator
ƒê√°nh gi√° ƒë∆∞·ªùng th·ªü kh√≥ - D·ª± ƒëo√°n ƒë·∫∑t n·ªôi kh√≠ qu·∫£n kh√≥
"""

import streamlit as st


def interpret_mallampati(class_num):
    """Interpret Mallampati class"""
    
    if class_num == 1:
        difficulty = "D·ªÖ"
        description = "Nh√¨n th·∫•y to√†n b·ªô kh·∫©u c√°i m·ªÅm, l∆∞·ª°i g√†, tr·ª• amidan"
        risk = "R·∫•t th·∫•p"
        color = "green"
    elif class_num == 2:
        difficulty = "T∆∞∆°ng ƒë·ªëi d·ªÖ"
        description = "Nh√¨n th·∫•y kh·∫©u c√°i m·ªÅm, l∆∞·ª°i g√†, ph·∫ßn tr√™n tr·ª• amidan"
        risk = "Th·∫•p"
        color = "green"
    elif class_num == 3:
        difficulty = "C√≥ th·ªÉ kh√≥"
        description = "Nh√¨n th·∫•y kh·∫©u c√°i m·ªÅm, m·ªôt ph·∫ßn l∆∞·ª°i g√†"
        risk = "Trung b√¨nh"
        color = "orange"
    else:  # class 4
        difficulty = "Kh√≥"
        description = "Ch·ªâ nh√¨n th·∫•y kh·∫©u c√°i c·ª©ng"
        risk = "Cao"
        color = "red"
    
    return {
        "class": class_num,
        "difficulty": difficulty,
        "description": description,
        "risk": risk,
        "color": color
    }


def render():
    """Render Mallampati Classification interface"""
    
    st.markdown("""
    <h2 style='text-align: center; color: #EF4444;'>üëÑ Mallampati Classification</h2>
    <p style='text-align: center;'><em>ƒê√°nh gi√° ƒë∆∞·ªùng th·ªü kh√≥</em></p>
    """, unsafe_allow_html=True)
    
    with st.expander("‚ÑπÔ∏è Gi·ªõi thi·ªáu v·ªÅ Mallampati"):
        st.markdown("""
        **Mallampati Classification** l√† c√¥ng c·ª• s√†ng l·ªçc ƒë∆°n gi·∫£n ƒë·ªÉ d·ª± ƒëo√°n 
        ƒë∆∞·ªùng th·ªü kh√≥ v√† kh√≥ khƒÉn khi ƒë·∫∑t n·ªôi kh√≠ qu·∫£n.
        
        **M·ª•c ƒë√≠ch:**
        - ƒê√°nh gi√° ti·ªÅn ph·∫´u ƒë∆∞·ªùng th·ªü
        - D·ª± ƒëo√°n ƒë·∫∑t NKQ kh√≥
        - Chu·∫©n b·ªã k·∫ø ho·∫°ch g√¢y m√™
        
        **C√°ch ƒë√°nh gi√°:**
        - B·ªánh nh√¢n ng·ªìi th·∫≥ng
        - H√© mi·ªáng t·ªëi ƒëa
        - L∆∞·ª°i th√® ra t·ªëi ƒëa (kh√¥ng ph√°t √¢m)
        - Quan s√°t th·∫•y c·∫•u tr√∫c n√†o
        
        **Gi·ªõi h·∫°n:**
        - Ch·ªâ l√† m·ªôt trong nhi·ªÅu y·∫øu t·ªë ƒë√°nh gi√° ƒë∆∞·ªùng th·ªü
        - C·∫ßn k·∫øt h·ª£p: kho·∫£ng c√°ch thyromental, m·ªü mi·ªáng, c·ª≠ ƒë·ªông c·ªï...
        - ƒê·ªô nh·∫°y kh√¥ng cao nh∆∞ng h·ªØu √≠ch cho s√†ng l·ªçc
        """)
    
    st.markdown("---")
    
    st.subheader("üìù Ch·ªçn Class Mallampati")
    
    # Visual guide
    st.markdown("""
    <div style='background-color: #FEF3C7; padding: 15px; border-radius: 10px; border-left: 4px solid #F59E0B; margin-bottom: 20px;'>
        <p style='margin: 0;'><strong>C√°ch ƒë√°nh gi√°:</strong></p>
        <ul style='margin: 5px 0;'>
            <li>B·ªánh nh√¢n ng·ªìi th·∫≥ng, ƒë·∫ßu ·ªü t∆∞ th·∫ø trung t√≠nh</li>
            <li>H√© mi·ªáng t·ªëi ƒëa, th√® l∆∞·ª°i ra t·ªëi ƒëa</li>
            <li><strong>KH√îNG</strong> ph√°t √¢m "Ahh" (s·∫Ω l√†m sai k·∫øt qu·∫£)</li>
            <li>Quan s√°t c·∫•u tr√∫c nh√¨n th·∫•y</li>
        </ul>
    </div>
    """, unsafe_allow_html=True)
    
    mallampati_class = st.radio(
        "Ch·ªçn Class ph√π h·ª£p:",
        options=[1, 2, 3, 4],
        format_func=lambda x: {
            1: "Class I - Th·∫•y to√†n b·ªô: Kh·∫©u c√°i m·ªÅm + L∆∞·ª°i g√† + Tr·ª• amidan",
            2: "Class II - Th·∫•y: Kh·∫©u c√°i m·ªÅm + L∆∞·ª°i g√† + Ph·∫ßn tr√™n tr·ª• amidan",
            3: "Class III - Th·∫•y: Kh·∫©u c√°i m·ªÅm + M·ªôt ph·∫ßn l∆∞·ª°i g√†",
            4: "Class IV - Ch·ªâ th·∫•y: Kh·∫©u c√°i c·ª©ng"
        }[x],
        help="Ch·ªçn Class d·ª±a tr√™n c·∫•u tr√∫c nh√¨n th·∫•y"
    )
    
    st.markdown("---")
    
    # Visual representation
    col1, col2 = st.columns([1, 1])
    
    with col1:
        st.markdown("### üìä H√¨nh ·∫£nh minh h·ªça")
        st.markdown("""
        ```
        Class I:   üü¢  [====|====|====]
                       C√°i  G√†  Tr·ª•
                       m·ªÅm      
        
        Class II:  üü¢  [====|====|==  ]
                       C√°i  G√†  Ph·∫ßn
                       m·ªÅm      tr√™n
        
        Class III: üü°  [====|==  |    ]
                       C√°i  1/2
                       m·ªÅm  G√†
        
        Class IV:  üî¥  [====|    |    ]
                       Ch·ªâ
                       c√°i
                       c·ª©ng
        ```
        """)
    
    with col2:
        st.markdown("### üîç C·∫•u tr√∫c gi·∫£i ph·∫´u")
        st.markdown("""
        **Kh·∫©u c√°i m·ªÅm (Soft palate):**
        - Ph·∫ßn m·ªÅm ph√≠a sau kh·∫©u c√°i
        
        **L∆∞·ª°i g√† (Uvula):**
        - C·∫•u tr√∫c l·ªßng l·∫≥ng ·ªü gi·ªØa
        
        **Tr·ª• amidan (Tonsillar pillars):**
        - N·∫øp g·∫•p hai b√™n amidan
        
        **Kh·∫©u c√°i c·ª©ng (Hard palate):**
        - Ph·∫ßn x∆∞∆°ng ·ªü tr∆∞·ªõc
        """)
    
    if st.button("üî¨ ƒê√°nh gi√° Mallampati", type="primary", use_container_width=True):
        result = interpret_mallampati(mallampati_class)
        
        st.markdown("## üìä K·∫øt qu·∫£")
        
        score_color = {
            "green": "#28a745",
            "orange": "#fd7e14",
            "red": "#dc3545"
        }[result["color"]]
        
        st.markdown(f"""
        <div style='background: linear-gradient(135deg, {score_color}22 0%, {score_color}44 100%); 
                    padding: 30px; border-radius: 15px; border-left: 5px solid {score_color}; margin: 20px 0;'>
            <h2 style='color: {score_color}; margin: 0; text-align: center;'>
                Mallampati Class {result['class']}
            </h2>
            <p style='text-align: center; font-size: 1.1em; margin-top: 10px;'>
                {result['description']}
            </p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown(f"""
        <div style='background-color: {score_color}22; padding: 20px; border-radius: 10px; border: 2px solid {score_color};'>
            <h3 style='color: {score_color}; margin-top: 0;'>üéØ ƒê√°nh gi√°</h3>
            <p style='font-size: 1.2em;'><strong>ƒê∆∞·ªùng th·ªü:</strong> {result['difficulty']}</p>
            <p style='font-size: 1.2em;'><strong>Nguy c∆° ƒë·∫∑t NKQ kh√≥:</strong> {result['risk']}</p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("---")
        
        # Clinical implications
        if result["class"] <= 2:
            st.success("""
            ‚úÖ **Class I-II: ƒê∆∞·ªùng th·ªü d·ªÖ**
            
            **√ù nghƒ©a:**
            - Nguy c∆° th·∫•p ƒë·∫∑t n·ªôi kh√≠ qu·∫£n kh√≥
            - Th∆∞·ªùng d·ªÖ d√†ng soi thanh qu·∫£n
            
            **K·∫ø ho·∫°ch:**
            - G√¢y m√™ ti√™u chu·∫©n
            - Chu·∫©n b·ªã d·ª•ng c·ª• th√¥ng th∆∞·ªùng
            """)
        elif result["class"] == 3:
            st.warning("""
            ‚ö†Ô∏è **Class III: C√≥ th·ªÉ kh√≥**
            
            **√ù nghƒ©a:**
            - Nguy c∆° trung b√¨nh ƒë·∫∑t NKQ kh√≥
            - C·∫ßn ƒë√°nh gi√° th√™m c√°c y·∫øu t·ªë kh√°c
            
            **K·∫ø ho·∫°ch:**
            - Chu·∫©n b·ªã k·∫ø ho·∫°ch d·ª± ph√≤ng
            - C√≥ s·∫µn d·ª•ng c·ª• ƒë·∫∑t NKQ kh√≥
            - C√¢n nh·∫Øc c√≥ b√°c sƒ© g√¢y m√™ gi√†u kinh nghi·ªám
            """)
        else:  # Class 4
            st.error("""
            üî¥ **Class IV: ƒê∆∞·ªùng th·ªü kh√≥**
            
            **√ù nghƒ©a:**
            - Nguy c∆° cao ƒë·∫∑t NKQ kh√≥
            - C·∫ßn ƒë√°nh gi√° to√†n di·ªán ƒë∆∞·ªùng th·ªü
            
            **K·∫ø ho·∫°ch:**
            - ‚ö†Ô∏è Chu·∫©n b·ªã k·ªπ l∆∞·ª°ng cho ƒë∆∞·ªùng th·ªü kh√≥
            - C√≥ b√°c sƒ© g√¢y m√™ gi√†u kinh nghi·ªám
            - Chu·∫©n b·ªã ƒë·∫ßy ƒë·ªß d·ª•ng c·ª• (video laryngoscope, LMA, cricothyrotomy kit)
            - C√¢n nh·∫Øc ƒë·∫∑t NKQ t·ªânh (awake intubation)
            - Th·∫£o lu·∫≠n k·∫ø ho·∫°ch v·ªõi b·ªánh nh√¢n
            """)
        
        # Additional assessment needed
        with st.expander("üîç ƒê√°nh gi√° to√†n di·ªán ƒë∆∞·ªùng th·ªü"):
            st.markdown("""
            **Mallampati ch·ªâ l√† 1 ph·∫ßn! C·∫ßn ƒë√°nh gi√° th√™m:**
            
            ### 1. Kho·∫£ng c√°ch Thyromental (TMD)
            - ƒêo t·ª´ s·ª•n gi√°p ƒë·∫øn c·∫±m (ƒë·∫ßu ng·ª≠a t·ªëi ƒëa)
            - **< 6 cm (3 ng√≥n tay):** Nguy c∆° cao
            
            ### 2. ƒê·ªô m·ªü mi·ªáng
            - ƒêo kho·∫£ng c√°ch gi·ªØa rƒÉng c·ª≠a tr√™n-d∆∞·ªõi
            - **< 3 cm (2 ng√≥n tay):** Kh√≥
            
            ### 3. C·ª≠ ƒë·ªông c·ªï
            - Ng·ª≠a-c√∫i c·ªï
            - **H·∫°n ch·∫ø:** Kh√≥ ƒë·∫∑t NKQ
            
            ### 4. L√πi h√†m d∆∞·ªõi (Jaw protrusion)
            - ƒê∆∞a rƒÉng d∆∞·ªõi ra tr∆∞·ªõc rƒÉng tr√™n
            - **Kh√¥ng l√†m ƒë∆∞·ª£c:** Kh√≥
            
            ### 5. Y·∫øu t·ªë kh√°c:
            - B√©o ph√¨ (BMI > 30)
            - C·ªï ng·∫Øn, d√†y
            - RƒÉng c·ª≠a nh√¥
            - C√≥ r√¢u d√†y
            - Ti·ªÅn s·ª≠ ƒë·∫∑t NKQ kh√≥
            - B·ªánh l√Ω: Sleep apnea, vi√™m kh·ªõp, kh·ªëi u c·ªï...
            
            ### Thang ƒëi·ªÉm t·ªïng h·ª£p:
            - **Wilson Score**
            - **LEMON Score**
            - **El-Ganzouri Score**
            """)
        
        with st.expander("üìã K·∫ø ho·∫°ch ƒë∆∞·ªùng th·ªü kh√≥"):
            st.markdown("""
            ### ASA Difficult Airway Algorithm:
            
            **1. ƒê√°nh gi√°:**
            - Kh·∫£ nƒÉng ƒë·∫∑t NKQ kh√≥?
            - Kh·∫£ nƒÉng th√¥ng kh√≠ m·∫∑t n·∫° kh√≥?
            - B·ªánh nh√¢n h·ª£p t√°c ƒë∆∞·ª£c kh√¥ng?
            - T√¨nh hu·ªëng kh·∫©n c·∫•p kh√¥ng?
            
            **2. K·∫ø ho·∫°ch A - Ch√≠nh:**
            - Video laryngoscope
            - Bougie
            - Blade kh√°c
            
            **3. K·∫ø ho·∫°ch B - D·ª± ph√≤ng:**
            - LMA/i-gel
            - ƒê√°nh th·ª©c b·ªánh nh√¢n
            
            **4. K·∫ø ho·∫°ch C - Kh·∫©n c·∫•p:**
            - CICO (Can't Intubate, Can't Oxygenate)
            - Cricothyrotomy kh·∫©n c·∫•p
            
            **Chu·∫©n b·ªã:**
            - D·ª•ng c·ª• ƒë·∫ßy ƒë·ªß, ki·ªÉm tra tr∆∞·ªõc
            - Nh√¢n l·ª±c: C√≥ b√°c sƒ© gi√†u kinh nghi·ªám
            - Th√¥ng b√°o ph·∫´u thu·∫≠t vi√™n
            - ƒê√°nh th·ª©c b·ªánh nh√¢n n·∫øu th·∫•t b·∫°i
            
            **ƒê·∫∑t NKQ t·ªânh (Awake intubation):**
            - Khi ti√™n ƒëo√°n r·∫•t kh√≥
            - G√¢y t√™ ni√™m m·∫°c t·ªët
            -ÈÄ≤Èè° n·ªôi soi m·ªÅm ho·∫∑c video laryngoscope
            """)
        
        with st.expander("üìä ƒê·ªô ch√≠nh x√°c Mallampati"):
            st.markdown("""
            ### Gi√° tr·ªã d·ª± ƒëo√°n:
            
            | Ch·ªâ s·ªë | Gi√° tr·ªã |
            |:-------|:--------|
            | ƒê·ªô nh·∫°y | 40-60% |
            | ƒê·ªô ƒë·∫∑c hi·ªáu | 80-90% |
            | PPV (Gi√° tr·ªã d·ª± ƒëo√°n d∆∞∆°ng) | Th·∫•p (~15%) |
            | NPV (Gi√° tr·ªã d·ª± ƒëo√°n √¢m) | Cao (~95%) |
            
            **√ù nghƒ©a:**
            - Class I-II ‚Üí Th∆∞·ªùng KH√îNG kh√≥ (NPV cao)
            - Class III-IV ‚Üí CH∆ØA CH·∫ÆC kh√≥ (PPV th·∫•p)
            - ‚ûú C·∫ßn ƒë√°nh gi√° to√†n di·ªán, kh√¥ng ch·ªâ d·ª±a Mallampati
            
            **L∆∞u √Ω:**
            - Inter-observer variability cao (ng∆∞·ªùi kh√°c nhau ƒë√°nh gi√° kh√°c nhau)
            - Thay ƒë·ªïi theo t∆∞ th·∫ø, th·ªùi gian thai k·ª≥...
            - L√† c√¥ng c·ª• s√†ng l·ªçc, kh√¥ng thay th·∫ø ƒë√°nh gi√° l√¢m s√†ng
            """)


if __name__ == "__main__":
    render()

